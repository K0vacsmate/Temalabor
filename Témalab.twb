<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0427.1803                               -->
<workbook source-build='2020.1.3 (20201.20.0427.1803)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Tmalab2' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='gains' inline='true' name='federated.0fbxz3m1e5ctah1ga7ml70wrnb5x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='gains' name='textscan.0rkk02o165a60b1fpl2l4098goci'>
            <connection class='textscan' directory='C:/Users/kovac/TÃ©malab' filename='gains.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0rkk02o165a60b1fpl2l4098goci' name='gains.csv' table='[gains#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Apple' ordinal='1' />
            <column datatype='real' name='Adobe' ordinal='2' />
            <column datatype='real' name='AMD' ordinal='3' />
            <column datatype='real' name='Amazon' ordinal='4' />
            <column datatype='real' name='DELL' ordinal='5' />
            <column datatype='real' name='Facebook' ordinal='6' />
            <column datatype='real' name='Alphabet' ordinal='7' />
            <column datatype='real' name='Intel' ordinal='8' />
            <column datatype='real' name='Lenovo' ordinal='9' />
            <column datatype='real' name='Microsoft' ordinal='10' />
            <column datatype='real' name='Netflix' ordinal='11' />
            <column datatype='real' name='NVIDIA' ordinal='12' />
            <column datatype='real' name='Qualcomm' ordinal='13' />
            <column datatype='real' name='AT&amp;T' ordinal='14' />
            <column datatype='real' name='Verizon' ordinal='15' />
            <column datatype='real' name='mean' ordinal='16' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apple</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apple]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Apple</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adobe</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adobe]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Adobe</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AMD]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>AMD</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amazon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Amazon]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Amazon</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DELL</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DELL]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>DELL</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Facebook</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Facebook]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Facebook</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alphabet</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Alphabet]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Alphabet</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Intel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Intel]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Intel</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lenovo</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lenovo]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Lenovo</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Microsoft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Microsoft]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Microsoft</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Netflix</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Netflix]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Netflix</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NVIDIA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NVIDIA]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>NVIDIA</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualcomm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Qualcomm]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Qualcomm</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AT&amp;T</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AT&amp;T]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>AT&amp;T</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Verizon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Verizon]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>Verizon</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean]</local-name>
            <parent-name>[gains.csv]</parent-name>
            <remote-alias>mean</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[AMD]' role='measure' type='quantitative' />
      <column datatype='real' name='[AT&amp;T]' role='measure' type='quantitative' />
      <column datatype='real' name='[Adobe]' role='measure' type='quantitative' />
      <column datatype='real' name='[Alphabet]' role='measure' type='quantitative' />
      <column datatype='real' name='[Amazon]' role='measure' type='quantitative' />
      <column datatype='real' name='[Apple]' role='measure' type='quantitative' />
      <column caption='Dell' datatype='real' name='[DELL]' role='measure' type='quantitative' />
      <column datatype='real' name='[Facebook]' role='measure' type='quantitative' />
      <column datatype='real' name='[Intel]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lenovo]' role='measure' type='quantitative' />
      <column datatype='real' name='[Microsoft]' role='measure' type='quantitative' />
      <column datatype='real' name='[NVIDIA]' role='measure' type='quantitative' />
      <column datatype='real' name='[Netflix]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Qualcomm]' role='measure' type='quantitative' />
      <column datatype='real' name='[Verizon]' role='measure' type='quantitative' />
      <column caption='Mean' datatype='real' name='[mean]' role='measure' type='quantitative' />
      <column-instance column='[AMD]' derivation='Sum' name='[sum:AMD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AT&amp;T]' derivation='Sum' name='[sum:AT&amp;T:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Adobe]' derivation='Sum' name='[sum:Adobe:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Alphabet]' derivation='Sum' name='[sum:Alphabet:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Amazon]' derivation='Sum' name='[sum:Amazon:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Apple]' derivation='Sum' name='[sum:Apple:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DELL]' derivation='Sum' name='[sum:DELL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Facebook]' derivation='Sum' name='[sum:Facebook:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Intel]' derivation='Sum' name='[sum:Intel:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lenovo]' derivation='Sum' name='[sum:Lenovo:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Microsoft]' derivation='Sum' name='[sum:Microsoft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NVIDIA]' derivation='Sum' name='[sum:NVIDIA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Netflix]' derivation='Sum' name='[sum:Netflix:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Qualcomm]' derivation='Sum' name='[sum:Qualcomm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Verizon]' derivation='Sum' name='[sum:Verizon:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean]' derivation='Sum' name='[sum:mean:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/kovac/TÃ©malab/Temalabor/gains.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>gains.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Apple</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Apple]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Apple</remote-alias>
              <ordinal>1</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Adobe</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Adobe]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Adobe</remote-alias>
              <ordinal>2</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AMD</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AMD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AMD</remote-alias>
              <ordinal>3</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Amazon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Amazon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Amazon</remote-alias>
              <ordinal>4</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DELL</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DELL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DELL</remote-alias>
              <ordinal>5</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Facebook</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Facebook]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Facebook</remote-alias>
              <ordinal>6</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Alphabet</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Alphabet]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Alphabet</remote-alias>
              <ordinal>7</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Intel</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Intel]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Intel</remote-alias>
              <ordinal>8</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lenovo</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lenovo]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lenovo</remote-alias>
              <ordinal>9</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Microsoft</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Microsoft]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Microsoft</remote-alias>
              <ordinal>10</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Netflix</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Netflix]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Netflix</remote-alias>
              <ordinal>11</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NVIDIA</remote-name>
              <remote-type>5</remote-type>
              <local-name>[NVIDIA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NVIDIA</remote-alias>
              <ordinal>12</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Qualcomm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Qualcomm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Qualcomm</remote-alias>
              <ordinal>13</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AT&amp;T</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AT&amp;T]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AT&amp;T</remote-alias>
              <ordinal>14</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Verizon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Verizon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Verizon</remote-alias>
              <ordinal>15</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mean</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mean]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mean</remote-alias>
              <ordinal>16</ordinal>
              <family>gains.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.107323' measure-ordering='alphabetic' measure-percentage='0.892677' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:mean:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[attr:AAPL:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:ADBE:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Adobe:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Alphabet:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Amazon:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:AMD:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:AMZN:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Apple:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:AT&amp;T:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:DELL:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Facebook:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:FB:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:GOOGL:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:INTC:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Intel:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Lenovo:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:LNVGY:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Microsoft:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:MSFT:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Netflix:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:NFLX:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:NVDA:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:NVIDIA:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:QCOM:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Qualcomm:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:T:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Verizon:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:VZ:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hungary&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Final' inline='true' name='federated.1kotozv1x4dgvj1c4hw0o0lusrzx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Final' name='textscan.1fw98cq0oidh0f1ax3bb70y88bis'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/kovac/TÃ©malab/Final.csv' dataRefreshTime='' directory='C:/Users/kovac/TÃ©malab' filename='C:/Users/kovac/AppData/Local/Temp/TableauTemp/1iy57971ei19r71b2143z1d0esmb/Final.csv.xlsx' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1fw98cq0oidh0f1ax3bb70y88bis' name='Final.csv' table='[Final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Company' ordinal='2' />
            <column datatype='real' name='Change' ordinal='3' />
            <column datatype='string' name='Title' ordinal='4' />
            <column datatype='string' name='Link' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Final.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Final.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[Final.csv]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Change]</local-name>
            <parent-name>[Final.csv]</parent-name>
            <remote-alias>Change</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[Final.csv]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Link]</local-name>
            <parent-name>[Final.csv]</parent-name>
            <remote-alias>Link</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Company1' datatype='string' name='[Company]' role='dimension' type='nominal' />
      <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Title1' datatype='string' name='[Title]' role='dimension' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/kovac/TÃ©malab/Temalabor/Final.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>1</ordinal>
              <family>Final.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company</remote-alias>
              <ordinal>2</ordinal>
              <family>Final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Change</remote-alias>
              <ordinal>3</ordinal>
              <family>Final.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Title</remote-alias>
              <ordinal>4</ordinal>
              <family>Final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Link</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Link]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Link</remote-alias>
              <ordinal>5</ordinal>
              <family>Final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.513889' measure-ordering='alphabetic' measure-percentage='0.486111' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hungary&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='diffs' inline='true' name='federated.00mvs690hxrlt114dc2lr0rkubbl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='diffs' name='textscan.0m4h4uq1buegyt12caq341sw76hm'>
            <connection class='textscan' directory='C:/Users/kovac/TÃ©malab/Temalabor' filename='diffs.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0m4h4uq1buegyt12caq341sw76hm' name='diffs.csv' table='[diffs#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Apple' ordinal='1' />
            <column datatype='real' name='Adobe' ordinal='2' />
            <column datatype='real' name='AMD' ordinal='3' />
            <column datatype='real' name='Amazon' ordinal='4' />
            <column datatype='real' name='DELL' ordinal='5' />
            <column datatype='real' name='Facebook' ordinal='6' />
            <column datatype='real' name='Alphabet' ordinal='7' />
            <column datatype='real' name='Intel' ordinal='8' />
            <column datatype='real' name='Lenovo' ordinal='9' />
            <column datatype='real' name='Microsoft' ordinal='10' />
            <column datatype='real' name='Netflix' ordinal='11' />
            <column datatype='real' name='NVIDIA' ordinal='12' />
            <column datatype='real' name='Qualcomm' ordinal='13' />
            <column datatype='real' name='AT&amp;T' ordinal='14' />
            <column datatype='real' name='Verizon' ordinal='15' />
            <column datatype='real' name='mean' ordinal='16' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apple</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Apple]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Apple</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adobe</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adobe]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Adobe</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AMD]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>AMD</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amazon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Amazon]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Amazon</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DELL</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DELL]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>DELL</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Facebook</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Facebook]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Facebook</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alphabet</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Alphabet]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Alphabet</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Intel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Intel]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Intel</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lenovo</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lenovo]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Lenovo</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Microsoft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Microsoft]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Microsoft</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Netflix</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Netflix]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Netflix</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NVIDIA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NVIDIA]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>NVIDIA</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualcomm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Qualcomm]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Qualcomm</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AT&amp;T</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AT&amp;T]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>AT&amp;T</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Verizon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Verizon]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>Verizon</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean]</local-name>
            <parent-name>[diffs.csv]</parent-name>
            <remote-alias>mean</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[AMD]' role='measure' type='quantitative' />
      <column datatype='real' name='[AT&amp;T]' role='measure' type='quantitative' />
      <column datatype='real' name='[Adobe]' role='measure' type='quantitative' />
      <column datatype='real' name='[Alphabet]' role='measure' type='quantitative' />
      <column datatype='real' name='[Amazon]' role='measure' type='quantitative' />
      <column datatype='real' name='[Apple]' role='measure' type='quantitative' />
      <column caption='Dell' datatype='real' name='[DELL]' role='measure' type='quantitative' />
      <column datatype='real' name='[Facebook]' role='measure' type='quantitative' />
      <column datatype='real' name='[Intel]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lenovo]' role='measure' type='quantitative' />
      <column datatype='real' name='[Microsoft]' role='measure' type='quantitative' />
      <column datatype='real' name='[NVIDIA]' role='measure' type='quantitative' />
      <column datatype='real' name='[Netflix]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Qualcomm]' role='measure' type='quantitative' />
      <column datatype='real' name='[Verizon]' role='measure' type='quantitative' />
      <column caption='Mean' datatype='real' name='[mean]' role='measure' type='quantitative' />
      <column-instance column='[AMD]' derivation='Sum' name='[sum:AMD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AT&amp;T]' derivation='Sum' name='[sum:AT&amp;T:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Adobe]' derivation='Sum' name='[sum:Adobe:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Alphabet]' derivation='Sum' name='[sum:Alphabet:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Amazon]' derivation='Sum' name='[sum:Amazon:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Apple]' derivation='Sum' name='[sum:Apple:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DELL]' derivation='Sum' name='[sum:DELL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Facebook]' derivation='Sum' name='[sum:Facebook:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Intel]' derivation='Sum' name='[sum:Intel:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lenovo]' derivation='Sum' name='[sum:Lenovo:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Microsoft]' derivation='Sum' name='[sum:Microsoft:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NVIDIA]' derivation='Sum' name='[sum:NVIDIA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Netflix]' derivation='Sum' name='[sum:Netflix:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Qualcomm]' derivation='Sum' name='[sum:Qualcomm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Verizon]' derivation='Sum' name='[sum:Verizon:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean]' derivation='Sum' name='[sum:mean:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/kovac/TÃ©malab/Temalabor/diffs.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>diffs.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Apple</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Apple]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Apple</remote-alias>
              <ordinal>1</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Adobe</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Adobe]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Adobe</remote-alias>
              <ordinal>2</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AMD</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AMD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AMD</remote-alias>
              <ordinal>3</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Amazon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Amazon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Amazon</remote-alias>
              <ordinal>4</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DELL</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DELL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DELL</remote-alias>
              <ordinal>5</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Facebook</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Facebook]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Facebook</remote-alias>
              <ordinal>6</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Alphabet</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Alphabet]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Alphabet</remote-alias>
              <ordinal>7</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Intel</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Intel]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Intel</remote-alias>
              <ordinal>8</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lenovo</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lenovo]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lenovo</remote-alias>
              <ordinal>9</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Microsoft</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Microsoft]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Microsoft</remote-alias>
              <ordinal>10</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Netflix</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Netflix]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Netflix</remote-alias>
              <ordinal>11</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NVIDIA</remote-name>
              <remote-type>5</remote-type>
              <local-name>[NVIDIA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NVIDIA</remote-alias>
              <ordinal>12</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Qualcomm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Qualcomm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Qualcomm</remote-alias>
              <ordinal>13</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AT&amp;T</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AT&amp;T]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AT&amp;T</remote-alias>
              <ordinal>14</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Verizon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Verizon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Verizon</remote-alias>
              <ordinal>15</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mean</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mean]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mean</remote-alias>
              <ordinal>16</ordinal>
              <family>diffs.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.287879' measure-ordering='alphabetic' measure-percentage='0.712121' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Intel:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:AMD:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Amazon:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Netflix:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Lenovo:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Apple:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Adobe:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:AT&amp;T:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:NVIDIA:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Qualcomm:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:mean:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Facebook:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:DELL:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Verizon:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Microsoft:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Alphabet:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hungary&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='HÃ­rek Ã©s hatÃ¡suk'>
      <table>
        <view>
          <datasources>
            <datasource caption='Final' name='federated.1kotozv1x4dgvj1c4hw0o0lusrzx' />
          </datasources>
          <datasource-dependencies datasource='federated.1kotozv1x4dgvj1c4hw0o0lusrzx'>
            <column datatype='real' name='[Change]' role='measure' type='quantitative' />
            <column caption='Company1' datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column caption='Date1' datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Link]' role='dimension' type='nominal' />
            <column caption='Title1' datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Link]' derivation='Attribute' name='[attr:Link:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Change]' derivation='Sum' name='[sum:Change:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[none:Company:nk]'>
            <groupfilter function='level-members' level='[none:Company:nk]' />
          </filter>
          <filter class='quantitative' column='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[none:Date:qk]' included-values='in-range'>
            <min>#2020-05-21#</min>
            <max>#2020-05-26#</max>
          </filter>
          <slices>
            <column>[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[none:Company:nk]</column>
            <column>[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[none:Company:nk]' value='20' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[sum:Change:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[sum:Change:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[sum:Change:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[sum:Change:qk]' />
              <tooltip column='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[attr:Link:nk]' />
              <text column='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[none:Company:nk]' />
              <text column='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[none:Title:nk]' />
              <color column='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[none:Company:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CD5B12C4-080B-4411-A421-5C820586CD83}' />
    </worksheet>
    <worksheet name='Napi Ã¡tlag'>
      <table>
        <view>
          <datasources>
            <datasource caption='gains' name='federated.0fbxz3m1e5ctah1ga7ml70wrnb5x' />
          </datasources>
          <datasource-dependencies datasource='federated.0fbxz3m1e5ctah1ga7ml70wrnb5x'>
            <column datatype='real' name='[AMD]' role='measure' type='quantitative' />
            <column datatype='real' name='[AT&amp;T]' role='measure' type='quantitative' />
            <column datatype='real' name='[Adobe]' role='measure' type='quantitative' />
            <column datatype='real' name='[Alphabet]' role='measure' type='quantitative' />
            <column datatype='real' name='[Amazon]' role='measure' type='quantitative' />
            <column datatype='real' name='[Apple]' role='measure' type='quantitative' />
            <column caption='Dell' datatype='real' name='[DELL]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Facebook]' role='measure' type='quantitative' />
            <column datatype='real' name='[Intel]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lenovo]' role='measure' type='quantitative' />
            <column datatype='real' name='[Microsoft]' role='measure' type='quantitative' />
            <column datatype='real' name='[NVIDIA]' role='measure' type='quantitative' />
            <column datatype='real' name='[Netflix]' role='measure' type='quantitative' />
            <column datatype='real' name='[Qualcomm]' role='measure' type='quantitative' />
            <column datatype='real' name='[Verizon]' role='measure' type='quantitative' />
            <column caption='Mean' datatype='real' name='[mean]' role='measure' type='quantitative' />
            <column-instance column='[AMD]' derivation='Sum' name='[sum:AMD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AT&amp;T]' derivation='Sum' name='[sum:AT&amp;T:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Adobe]' derivation='Sum' name='[sum:Adobe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alphabet]' derivation='Sum' name='[sum:Alphabet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Amazon]' derivation='Sum' name='[sum:Amazon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Apple]' derivation='Sum' name='[sum:Apple:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DELL]' derivation='Sum' name='[sum:DELL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Facebook]' derivation='Sum' name='[sum:Facebook:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Intel]' derivation='Sum' name='[sum:Intel:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lenovo]' derivation='Sum' name='[sum:Lenovo:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Microsoft]' derivation='Sum' name='[sum:Microsoft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NVIDIA]' derivation='Sum' name='[sum:NVIDIA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Netflix]' derivation='Sum' name='[sum:Netflix:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Qualcomm]' derivation='Sum' name='[sum:Qualcomm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Verizon]' derivation='Sum' name='[sum:Verizon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mean]' derivation='Sum' name='[sum:mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Adobe:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Alphabet:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Amazon:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Apple:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:AT&amp;T:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Facebook:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Intel:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Lenovo:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Microsoft:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Netflix:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:NVIDIA:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Qualcomm:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Verizon:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:AMD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:DELL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:mean:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:mean:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Adobe:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Alphabet:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Amazon:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Apple:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:AT&amp;T:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Facebook:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Intel:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Lenovo:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Microsoft:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Netflix:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:NVIDIA:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Qualcomm:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:Verizon:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:AMD:qk]&quot;</bucket>
              <bucket>&quot;[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[sum:DELL:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[Multiple Values]</rows>
        <cols>[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{C92CF72B-9D25-464E-85DC-DC61D91D6C69}' />
    </worksheet>
    <worksheet name='ÃtlagtÃ³l valÃ³ eltÃ©rÃ©s'>
      <table>
        <view>
          <datasources>
            <datasource caption='diffs' name='federated.00mvs690hxrlt114dc2lr0rkubbl' />
          </datasources>
          <datasource-dependencies datasource='federated.00mvs690hxrlt114dc2lr0rkubbl'>
            <column datatype='real' name='[AMD]' role='measure' type='quantitative' />
            <column datatype='real' name='[AT&amp;T]' role='measure' type='quantitative' />
            <column datatype='real' name='[Adobe]' role='measure' type='quantitative' />
            <column datatype='real' name='[Alphabet]' role='measure' type='quantitative' />
            <column datatype='real' name='[Amazon]' role='measure' type='quantitative' />
            <column datatype='real' name='[Apple]' role='measure' type='quantitative' />
            <column caption='Dell' datatype='real' name='[DELL]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Facebook]' role='measure' type='quantitative' />
            <column datatype='real' name='[Intel]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lenovo]' role='measure' type='quantitative' />
            <column datatype='real' name='[Microsoft]' role='measure' type='quantitative' />
            <column datatype='real' name='[NVIDIA]' role='measure' type='quantitative' />
            <column datatype='real' name='[Netflix]' role='measure' type='quantitative' />
            <column datatype='real' name='[Qualcomm]' role='measure' type='quantitative' />
            <column datatype='real' name='[Verizon]' role='measure' type='quantitative' />
            <column caption='Mean' datatype='real' name='[mean]' role='measure' type='quantitative' />
            <column-instance column='[AMD]' derivation='Sum' name='[sum:AMD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AT&amp;T]' derivation='Sum' name='[sum:AT&amp;T:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Adobe]' derivation='Sum' name='[sum:Adobe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alphabet]' derivation='Sum' name='[sum:Alphabet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Amazon]' derivation='Sum' name='[sum:Amazon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Apple]' derivation='Sum' name='[sum:Apple:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DELL]' derivation='Sum' name='[sum:DELL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Facebook]' derivation='Sum' name='[sum:Facebook:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Intel]' derivation='Sum' name='[sum:Intel:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lenovo]' derivation='Sum' name='[sum:Lenovo:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Microsoft]' derivation='Sum' name='[sum:Microsoft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NVIDIA]' derivation='Sum' name='[sum:NVIDIA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Netflix]' derivation='Sum' name='[sum:Netflix:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Qualcomm]' derivation='Sum' name='[sum:Qualcomm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Verizon]' derivation='Sum' name='[sum:Verizon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mean]' derivation='Sum' name='[sum:mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00mvs690hxrlt114dc2lr0rkubbl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Adobe:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Alphabet:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Amazon:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Apple:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:AT&amp;T:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Facebook:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Intel:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Lenovo:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Microsoft:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Netflix:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:NVIDIA:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Qualcomm:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Verizon:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:AMD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:DELL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:mean:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.00mvs690hxrlt114dc2lr0rkubbl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Adobe:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Alphabet:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Amazon:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Apple:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:AT&amp;T:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Facebook:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Intel:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Lenovo:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Microsoft:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Netflix:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:NVIDIA:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Qualcomm:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:Verizon:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:AMD:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:DELL:qk]&quot;</bucket>
              <bucket>&quot;[federated.00mvs690hxrlt114dc2lr0rkubbl].[sum:mean:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.00mvs690hxrlt114dc2lr0rkubbl].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00mvs690hxrlt114dc2lr0rkubbl].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00mvs690hxrlt114dc2lr0rkubbl].[Multiple Values]</rows>
        <cols>[federated.00mvs690hxrlt114dc2lr0rkubbl].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{3DA56F08-FAFF-485D-AEFB-A50D1C3196E5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='PrezentÃ¡ciÃ³' type='storyboard'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='1' param='vert' removable='false' type='layout-flow' w='99000' x='500' y='889'>
            <zone h='3667' id='3' type='title' w='99000' x='500' y='889' />
            <zone h='11222' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99000' x='500' y='4556' />
            <zone h='83333' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99000' x='500' y='15778'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Napi Ã¡tlag vÃ¡ltozÃ¡s' captured-sheet='Napi Ã¡tlag' id='1' />
                  <story-point caption='Napi Ã¡tlagtÃ³lvalÃ³ eltÃ©rÃ©s' captured-sheet='ÃtlagtÃ³l valÃ³ eltÃ©rÃ©s' id='2' />
                  <story-point caption='HÃ­rek Ã©s hatÃ¡suk' captured-sheet='HÃ­rek Ã©s hatÃ¡suk' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{49326595-C85D-4476-8DBB-00AB3C16C3DE}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' maximized='true' name='Napi Ã¡tlag'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fbxz3m1e5ctah1ga7ml70wrnb5x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{16B93AA4-C392-4946-AB63-208A4EF642B0}' />
    </window>
    <window class='worksheet' name='ÃtlagtÃ³l valÃ³ eltÃ©rÃ©s'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00mvs690hxrlt114dc2lr0rkubbl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6BD3E67B-650D-4A7F-82D1-2B4812A8FBEE}' />
    </window>
    <window class='worksheet' name='HÃ­rek Ã©s hatÃ¡suk'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1kotozv1x4dgvj1c4hw0o0lusrzx].[none:Company:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9F6CAF57-05BB-4758-91DB-47AD94212D90}' />
    </window>
    <window class='dashboard' name='PrezentÃ¡ciÃ³'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{ADF8B51A-709E-4473-87BA-109677252BAF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='HÃ­rek Ã©s hatÃ¡suk' width='192'>
      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
      kCQ9/AIWTfGmCEMqNgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Napi Ã¡tlag' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PrezentÃ¡ciÃ³' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='ÃtlagtÃ³l valÃ³ eltÃ©rÃ©s' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Bc133n+7n3ds5pcs6YCAyRAzOYRJESKSoHS5YtP9kub7Lfbtnlfd6t
      p9pn16t967WlXcuyZUVSgWIWCYIACBA5A5Nz7pnp7pnOufue98eACMQAGICASIvzqWKB033D
      ubfP757f+f2+53clIYRglVU+osi3uuOq3azy28AtG4CqqrezHaus8oGwYgMQapbe7m7iqeyd
      bM8qq/xG0ax0Q5FcJJKRiUSjGLR2VFVddYNW+VfPig1AMhVQaA1hMhpRFAXg4r+rrPKvFelW
      o0D5fH7VAFb5V88tT4JXWeW3gVUDWOUjzaoBrPKRZtUAVvlIs2oAq3ykWTWAVT7SrBrAKh9p
      Vg1glY80qwawykeaVQNY5SPNytWgQjA+MkgsmbmT7Vllld8oK1eDijQ+f4TSKg35fH5VDbrK
      bwUrV4OqEja7gTnfIpWlHmBVDbrKv35W1aCrfKRZnQSv8pFm1QBW+UizagCrfKRZNYBVPtKs
      GsAqH2lWDWCVjzSrBrDKR5pVA1jlI82qAazyoUMIQU7N/0bOtWoAq3zoSOWy/Ozsyd+I1mzV
      AFb5jTA4tYAvFF/RtqFkEm84hPrhMgCBb3qEaPrONWaV3078oTj/z08OcnZobkXbh5IJZEnC
      F4ve4ZbdhBpUzSQJ+OZx2KoxaViVQ6+yIjK5PH/3/HE+uaOJuYUouVzuhvssxmM0eAqZCi5S
      YDLf0fat2ADyAnQGEyKbRlFMwKocepXrI4TgX149wwPra2itLuBHb55Ho7lxlwunU7SVlNE9
      50VRFCRJumNtXLELpNWbqG9ZR5nbdMcas8pvF2+eGEGv1XDv2ipcNiPBaHJFXkM4laTS4SKc
      TN7xNq5Ogle5IwxMBjjWO8NXHulAkiQUWUYIWInXnFdVFFnGpNORyN7ZJbirBrDKbScYTfL9
      18/yx5/ahFZzyU3WahQyuevH9/OqiiItdctSmwNvOHxH27pqAKvcVrK5PH/3q+N89dF1uKzG
      K74rcJjwhxLX3T+cSmIzGJEkiVK7HW8kdCebu2oAq9w+hBD86M3zbGouo6nSfdX3RU4zvmDs
      uscIJRM4jEuGU2K1MxsJ39Fo46oBrHLb2H9uglQmxyMb65aN3BQ6zcwHr58MCyWTOIxLgRad
      RkNOVbmTwfZVA1ghyXSWQPj6w/dHmVFvkL2nx/j6453XDFsWOsz4bmgAiYsGAOAxmwnErz9q
      vB9WDWAFCCH42d4efra354NuyoeSSDzNP756mj9+ahN67bXj/AUO8w3nAMFkAqfx0tyh1O7A
      G75z84BVA1gB0/4I/ZMBIvFVHch7yedVvv3CCT7/YBuFzutnbR1WA6F46ro+fTKbxajVXfy7
      zOZgJhK6Y/OAVQO4AaoqePatbn73Y50k0tlV+cdlCCF4bm8PLdUe2msLb7i9LElIcE2R29K9
      vfI7l8nMYmJlIrpbYdUAbsDJAS9Oq5GGcjcGrUIilf2gm/Sh4VjvDP5QnCe2Na1YrmDQaUhn
      ls8FJLIZTFrdFceSJAm9oiGdv7GG6Fa4qeK4qVTqNyJR/bCQyuR4+dAAn7m/BUkCu8VAaNUN
      AmDKF+bVI4N848n1yPLKtToFDvM1ZdHhyyJAl1NiszN7hxJiKxbDoWYZHx7AUlBFWaEdIcRv
      vTvw6yNDbG+rwGbWI4RYCuMtRil1Wz7opn2gJFJZ/vdLJ/nDT27EqNPcVD8odJqYX4xRVWS/
      6rtgMoHdYLzqeKU2OzORINWuq3ML75ebqA4NOoMRSeQudn5VVW97gz4s+EMJzo7M8Rdf2nHx
      OotdZryBKGvrij7g1n1wqELwnRdP8IkdTRS7zDfdBwodZuYWY8vuF0zEKbbar/qu2Grj1PTE
      HelvK68OLcsYjGYKCtzIsoQQ4rdWDi2E4Bdv9/Lp+1rQ67QXPy/12BiaHv+tve4bIYTgxQN9
      VBY52Lim7JZkykUuC/2TC8vew3AqRUtx6VXfmRWFdC6PLMu3XRq94jmAJGsoLStDq9w5bfaH
      hd4JP3lV0FZzZWTDYzcRCN95ie6HlTNDc4x4gzxzX/Mtd8QlPVB8WVVo5IIOaDmcJhPB5O1P
      RH7oo0CJXJx0PvUbO182l+cX+3r5ws72q35ks0FLPJX5rZ/7LMfcQoxf7u/lm5/YgCLferex
      mfREExneG+4EyAsV5RqGtaQMvf0Jsd+4AQghmJpYmT+XU3O8Ovlzdk+/8hvrdPvOjNNaU7hs
      UkerUdAoMqnMnQnJfVhJpXN858UTfOOJ9VhN+vd1LEmSkKSrcwHZfB6NfG3Xssy+lBC73Xwg
      I0Bvz3n2v/XWdTu1EIKjvrdptLVi1lroD3Xd8XZF4mkOnJvgiW2N19zGbtYT/giFQlUh+MdX
      T/Pwxjqqix235Zgmg/aqfEoklcRuMFzTtSowW/DfhkXy47Mhdh0fufj3B2IAPcYe5nxeTp84
      fk0jmIiNEM4EWevewPaiB+haPEk0c+cWR7w78f34tkYMumvHBgqdlhsKun5bEAJ+fXQIu0XP
      9vaK23bcJVn0lfcwlExiXyYH8C7vrirL5t9fwaz+qQBvnx2/+Pdv3AAkSaLEXkrrfevo7epi
      aKD/qm1i2ShHfft5oPRjSJKMTtGzo3gn+2ZfRxV3JvQ6PhfCF4qzaU3ZdbcrcVmYXbjz5To+
      DPSM+zg3PM/nH2y7rdGX5WTRoWQC5w0MoNhqZy76/h6CU/Nh/KH4xRHoAxkBWovbGQz08czn
      v8CBvXvwTk9f/E4VefbOvMaOogcxai754SWmCtz6QroXT9329uRVlWf3dPOFnW03zGqWuC3M
      Ltxeee6gf56p0OJtPeb7JRBO8JPdXfzRUxuvWNZ4OyhaZhQNvkcGvRxldgcz72MiLIRgJhBl
      R3slA1MB4AMygHpPE8OBQYwmE8987gu8+sKvCC4uIoTgdOAohcYSyi3VV+wjSRKbC+9mMNxL
      ML1wW9tzrHeGEreVqqIb+7gFDjP+27guQAjB6elJTk9PfmiiS5lsnm+/cIKvPbYOh8Vw249f
      4DBdJYe4fCXYtXi/kSBVFeTyKhvWlNI16gM+IAMwao3IkkQ8E8PhcvHxp5/m+Wd/yujCIFOx
      cTYW7lh2P42s5Z6Sh3nb+zp5cXuKpybTWV47MsQz9zavaHuzUUs8eftCobF0Go0sk8pl73gF
      hJUghOBf3jjL9rYKGspdd+Qc764LuPwepnM5DBrtdfYCs05HPHPr9z6SSGMz6WgodTA8vTTi
      fiAGIEkS9Z4mhvwDAJSWlbPtwXt4seun3Fv4CIp07SG3wFBMubmaM4Gj77sdQghePjTI/XdV
      rzi8p7vgDmSyt8cAhxd81HsKaSwoYtA/f1uO+X7Yc2oMCXhwfc0dK0hlNmhJpC4Z+810aKvB
      QDR9a3mhifkwZbkRxPG/R6dViCbSH1wirLWkg57ZpdCmECqT5hHWGDrY9/Kb180RSJLEXZ6t
      TMbG8CdXVmvyWswH4/RPBrhvXfWK95EkCZtZTyTx/kOhQghGAn7qPAU0FhQx5PfdtpFFqHlE
      Okp+YRShrixvMTi1wKHuKb7y6Lo7Wo1tKRcgXcwFxDNpzDrdDc8pSdLSApnL3CAhBMcOHSQe
      u/G8bGIuTHl+lFzfKzSVWuibCNyEHFrNMDTQTzBye/zfalct44ujCCHoCZ7FoBj52JancRcU
      8Nbrv77YEXLRfrKLxxCXRX8UWeG+0kfZP7uLnHpr+nwhBM++1cVn7m9Fo9z4Nlyufl3J0r6V
      EMssGZFFp8es02PQaG568YdQ84hUhLyvj2zfq6QP/i3J1/6U5K9+n+Tr/4n0gb8hc/L7NzSs
      UDTFv7x+lj96aiN67e2d9AohiEXCZDKXHhrWixnhG4dAL6fU7riiVEoul2P3679mfnb2hvtO
      +cKUSl40jY/QQi9do76bkENLWux2GxpFIp/Pv6/iuKoARVIwaAwML/bTFzrPE5WfI5/Ps/3e
      +3jtxRc4evAdNm7dRjrwDqCSjfSgLX4aSbMkRbYpDuqsazg6f4AtBffedBu6Rn1oFJmGMseK
      CrZOh4OMBxfZUV1HkcPEjD9MY7nzps97OcP+eWqcbvIXYttNBcV0z86wvbru2jsJldzwbggM
      IiLTiGQQNEYkayk4a5ArtqBp+zSS2QOSDGqezK7/SHbiKHL5xmUPmcurfPuF43zugRYcZt2K
      7sdKyWTSTAwPEQr4Kamsory6FoACu5HZQASLQcNiPIZNr1/ReT1GE/ORyMVt+7q7sdpszM/N
      UllTc9195xYiFFpSKJ1foXz3f2U0WHITcuhcnOnZALUW50W13q2oIoUQHB2P0F5ipqmohReH
      fsbX1/0RBu2laMPHn3qan//4R9jtFqqMIUz1f0o+2kN66rvoix5DsS7Fpdd6NvLq5M/xpWcp
      Na88UZPJ5nnhnQH+zTObV1SsFWB0cYFB/zxbq+soK7BxZmhuxfsuhxCC0cUFHmpsuXicWk8B
      p2YmkWT5mnqb/Ow5xOAbaDd8FdlegWRyI11HQgAa5Af/ktSr/x6Dpw7ZcqXATwjBT97qYV1D
      Me11xbfN9cnn88xMjOGb9VJV10BVbR2jg/0Xr7XYbSUQSdKs0RDJpCmzO1Z0PxUhQFpSJ8uS
      xPkzp3nosccZGRq87v65vIpIhdEVu9HYStAZjJizN+ECyVoLd3V24LBcP1R1IyRJoqXIxImp
      KEKXw6a6cBkKrthGo9Hw9Oc+x2jPftCVIEkSGlsbxppvkg2eID3zHCKfRJZk7it5lINzb5HJ
      r9wn331ylLsaS3DbVzbsqkIwH4vQVlzKkH+ewmUymTdLPJNBFQKr/tLkW6soFFms1411Zwd3
      oV3/O2jK1iNbCm/Q+ZeQTW502/+E9N5vIfJXuowHuyaJJtI8trnhtnR+IQSB+TnOHD2EEILO
      LdspKC7BaLaQTFyK/BRdlgy7URLsciRJosBiYz4WIR6LkctlqW9qIuDzXXe/QDiBKz2OXNS6
      1J+an6Apc/KDmQQ7jRqMuiRCVOGPLj/xMxiM7Ly3lrf2jzIzNYUQAlljxVD5NRRzHYnRvycX
      G8aqtdPuuovD8/tW5JIFo0mO9Ezx2Jb6Fbc3nEpi0upYW1ZB7/wsFqOOaDKzokKv12J0wU+t
      23NVp2spLqVnzrvsPiKfQfX3oxR33PT5NGXrUco6yZz4p4v3aWw2xO6To3z98c6bWta4bNuE
      IBaNcP7kMfzzs7Sv30RVXcNFL0GSJLRaLdkLod4Chxn/BQOIpFJY9SvPN5TZ7HjDYc6dPsXa
      zvUXjnv9ggUTc2HKmUYpagNAU7WdDtviB2MA0WyY6eyb6EUdGsVGIO6/ahshBPnEGNsf+Rr7
      dr/Jr19+kXg8vnQjnZswVn2djH836bmXabKtIZGLMxkbve55hRD8fF8PT9295rr1a97L+GKA
      apcbi06PQaslmk2hquKWdSlCCIYDPho8V1dSKLLaCKUSpLJXT+7z3rPIhS1IGt1V360EbeeX
      UReGyU8eIZpI871XT/PNT2zEqL9+/P1GZDJphnq6GO7tpqZxDWva16E3XN2hbQ4nkWAQuFQn
      VAiBKlTkmxh9Su0OZsJBeru6aOlYehgYTUaSiWsHJibnQ5Rr/MgFawCQNHqs7R//YOTQh+f3
      cW/pQ9xVZsWk28iAr+/q7XJRJEnBU1TBF776Napr6vjpv/wzJ48eIZ/LIetcGKv/AFljJzn2
      be52tnLUt59U7toLVoZngkTiae5qLLmp9k4sLlCkN5JJp+koKaNrdhqrSUf0FkOhiWyGvFCX
      ferJkkStu4CRhasfCrnBXWgbH7mlcwJIsoL+gb8geex7/K/nD/Kpe5speR/rm1U1z/T4KOeP
      H8XucrN201Zsdsc1XSmb00kktGQARr2WdDZHJp9He5NzSbvByHxwEafbjV6vX3KLCovwX8cN
      mvKFKHdokE2XAhdpZ+sHI4Z7sOxxik1leMwattWuZzFx9bwiHxtAsTYBIMsyrR0dfOX3vkE0
      GuWH//SPTIyNAhK6gvswlH8BxbeLdpHgnbk3lx0K83mV5/Z0L7vQ5V2EEOSyWaLhMN7JCQa6
      z3Pq+BH8iwvMjwzRf/4sFQ4X89EoNovulleHjS74qXEVXLMdawqL6ffNXXEdIptEDY5ffILd
      KpLBwWvmr1GVOk9n7a0tMhdCsOD3ceboYXLZLJ1btlNUeuMlkjb7kgG8e12SJBFMLC2Ev9n5
      h9VgZO3mzUu1iU7/CMks4ZtfPi8khCAQWKCg8Mq13Il4/ANwgYRAm02BmkOSJDpKLKRyBSTe
      UysmF+1FY2254jO9Xs/9Dz3MJ575DMcOHeKFn/+McCiEYijGWPNH1FpqyQaPMxK5WmF6sGuS
      mhIHZQU2YOkdZ5l0mmDAz+TIML1nT3H6yEG6Th5nenwUVVUpLivHUV1DfVkFHRu3oKoquUya
      GpeHuEgydwuqUCEEQwH/su7Pu9j0BiSWfON3yc+cQildh6S8P3flRL8Xb0zDk3d5yBz/7k2H
      suOxKN2nTjA/M01r5waqG5pQVhgN0+n1ZLPZi2/JcFgMTPiDNxTBvRdVVfH294PVwkx4mv3D
      e5jKTuG/hgFkcypScARN0aX+JIQgmYjfRB7gdjJ/HhaGwFKMrqAFke/m2KSd++qcSJKEUHOo
      aR+yoXTZ3V1uN5/+4pcYHRril8/+hMbmFrZs246h+DHus7Xy8tRLFORC2FybAYlEKsOeEwP8
      7s41jPT3Eo9FyaTTaLRaLBYrVrsDd2EhBpP5qtDu6eF+6txLT+ui0jLmZ2ZoLSvj7Z6RW1KF
      JrIZcvk8tmV85HeRJIk1RSX0+WbZUrUUN88O7kLX+aWbPt/lTPsjvHxogP/0xR0Y9JtI7fpz
      8uPvoKm554b7ZjMZxocHiUXC1DY1Y3M4bylqZDCaSCaTmMxmipxmBrx+NjWV39Qxhgb6cWn1
      eCNhur2v8oc7/h2/Ov0c2vnlXanZhShFYha56LLrvFDV5Dc/AkgSVO6AtV+Bghbw9/JQehDm
      TzDhD4OaQ03PIesLkaRrN0+SJOoaG/md3/sGGkXhB9/7LoN9fWg1JXRY72bv1EuEB79N94m9
      vPXmWzzRZoVcGofLTWNrO+u33c26TVupb2mjqKwcs9V2VedXhWA+GqHYulTDpqC4BP/8LFa9
      gcZyN6HUzWeDxxYC1CwT/Xkvde4CxhYDSwnHTAwRnUN2rzxy9V4SqSz/8PIpvvHEeixGHZKs
      YLj/z8mc/GfUyPJRJ1h62s5MjHPu+BGsdjvrNm/F7nTdcsjU7nQSCS4J0QqdFsb9izdUgV6O
      EIKzJ0/wyL33c87bRzafpa2kA7PJwmJ8eZXwxHyYCl0QpaDp4me5fB5FUT7ARfGyAo4qaHgM
      Or7MSPIE/bMhUmd+DIOvoJVL4DoyhyUXJkU0HKKstISO9jbe3r2L7/7d/2Cxz4/RuokxnYsK
      y3HScpi7Nm2muqERd2ERBqNpRT9gJJXEoNWhuzDEa3U6jCYT0XCIzvIKcrprT4LT/qsLui65
      P1dHf9RliozpNRqcRhPzsSi5yWMo5RtXFPNfDlUVfPeVU3xsSz2VlxWkkgx29Hf/Kam9/zci
      d+W1CCEIBvycPXqIdCrJui3bKC6ruO5DaSXYnS7CFybCRU4ziVwah2HlLlAymSQej1NSXIwv
      cpon259BkiTWV2xiIjVGKnW1UG5yPkylx4SkvzThT8ZjmMyWD0dVCLvJzZyaormykFPOT5DV
      pVGSGTj3Yxj6NWo8QDIexzfrZaS/l/Mnj3HmyEH6zp1hwT+P3mCkdd16vv5Hf8KTn/4sIyNj
      qP0y3ckoP+hfy30NCTIzP0Xkbi55Nb64QLXzyoliSXkls1OTVDpd6ExLMt73kk9nGPvOi8SH
      pq/4PJnNks3nsV8o/ZHNqwwFkuwaCDLgv3pC3XohJ5AbehNtw0M31fZ3WVK8DlDoNLOl5WpX
      QyluQ1NzD5mj/+uiESbiMXrOnMQ7NUHzuvXUNjWjuYFUeaVYbHZiF976UuA047DpLz5gVkLX
      2TO0r+tkKjRBKBnHol96mKyv2ETCnrwqISaEYGo+SEVZ8RWfx2NRTBbrh8MAFFmhzF6Bqs4i
      yTJepQap4eOw9iv48w7iJ37I+NkDJOKxiy7MXdvuZu2mrdQ3v+vCWFEUhYrKKr709d+jpKiM
      +bcDGKumcDd+FY2tjcTYd8hF+1c88ZsILlxVjs/uchOLhEEVKDkdo8uEK5OTPixNFfj3nCaf
      viT7HbuQT0hmVc55Y+wdDpHJqWyrMDMaiJPJX6mCLbU58EUWyaRiSM6qW7izcH5knoGpAJ+5
      v/Wao5624zOoMR/pob2M9PfSf/4s5VW1tKxbj9F0e1+LqygKCIFQVTx2IwUOMyt1poQQdJ89
      S/vadbzY9Qsebf7kxQUyVr2N6rpa5ha879kHIgEvjpIrdUKJWAyz5UMyAgC0FLXRO9/NWscc
      /ek2MjkVIclMLaoY7voizaZZqj36FbkwiqLQsraTqHYTRXoXz+77Z/yxAozVv09m4QBp7/OI
      G0gnMrkciWzm4tP6XWRZxukpYNE/jy6r58yFLPXlRPsmcG5qwbGhicDeMxeVpMOBEOGUmUPj
      EWwGDQ82OGktNvPOm68xdGQPg+8ZBRRZpsJmZ3bN527J9RBC8NLBAX7v4+uvq3gVAoINX+Tc
      uR4MIsa6zdtwuN13bj2A1UYsGiGdzxEMpVf8CqSA34fZamE+NY+ExJbqdReVoZIksaFqC+OJ
      sSv2SWVyaKPjKEWtwAXXOZcjEY9hvBkXSIgcfX2DK938pmkqamVgvhcldpo1rixnvDHisSjG
      xQW0Q1PgvhuGdy9Fj27YVnj96DCb2qp5vOWTSCWCF3/9HL9+dS+q+3PIhhISY39PPjF+zRfX
      zl2Y/C7XCYrLKpibnsZlNjE4tXCFhFmoKinvArp0Gse6elLzQSbHAuwbCZHJW2kvcbCzwUGN
      y4BGloiEQ/h9PlrKHJwdmiKdu2wUEIL68ZcYyJpuSXkbjqeRZQmXdfmIkxCC0OICZ48dIZGF
      ddvvx9n3T0jq7V+Zdrmc3O50EQ4uEk4lmJ6Loao3vjYhBGdOnKBzw0Ze7PoFn2z/9MV3B7x7
      3M7SDQy9JwQ+7Y9Qpg0huxvI5nL83b69/O3ePaRTKQxG403UBpU0OBzWi0Vx348cejnMWjPJ
      TJxkbJyKuqeZnkoy2DdGWy6H6ilAnp+DgAcRehm1YiPC3Qw2OyyjmlyIJDk14OXPv7wDVIkH
      q57goH43lbFqnv3hD2jrWEvnus+SnnsRDFXoCh4C6cpbMeyfp8blWVaiqzMYyOdz2A0SRtXE
      ee80d9csRWgy/jCKQSIfeJlh46eYWH8XSu8MpiY7FXYVj1G+KH8GOPLOO2zYvJmmllb2HO+m
      xxuho3RpsiYSi9jiM6TyeSLJJGbdzUkgzg/P0VrtueJ875JKJhgbHEACGlvbMbzr6tTvJHnw
      f6Lb8e9v6lzvkhc5UvkkofQii+kFgukA0VyYpJqgSF/K9qIHMdtsTAwPoeq0iCz4gzEKHNd3
      tYQQjAwNUb2+HsWvUGItQ83n0coKsXMjGGtLcBidBIJ+oskIRu3S8cZmF6kstBGNpvifb++j
      taKCc+PjBLQK+Xwe5a/+6q/+aiUXJvIZpqdn0BjMmIxLCkaNRoMsy7flP0VWmApNYFQUSoq3
      4jEq9ExGqVvbhKa8DMrKob4JqbgN2X8KufsM8kQA2edDzueQDUZkvR5JlvnBrnM8urme8kI7
      sixj1llI5uNkLVke3fYk46OjvLP/KAU1D2E3xMj530BjqUGjW9oeSeL41Bibq2rRXuMaERAJ
      hZgLSwhzmpbiMrQaDZFzIwS0ebpsrQRTQ2xZ00Dh3AKnZ8bY0tGGWW+4eIxUMsnhA/vJV6uM
      Bod5sGMHpyfD2EjisNtQh3YhO8qhsIVAIk65w4WMihweRza5kRXluvf0pYMD3N3mwW23oShL
      16GqeSZHR5gZH6Wyrp7Kunr0hkttUgqbUYd2ISHQFtQjy1efAwmyZIjmwswmpxiNDdAXOkd3
      6BQD4W68iUnSagqLzkqFrYZmZwdr3RtZzPg5HzxFk6eVmbExYkYjoWCWcreDErftutcyPjJC
      Pp/nSPQgn1r7eRympTzEom8BBXAKBcVlpWfgPHqbgSp3NbIss//sBKXRSb4/6OXeDev4WEcH
      Tq2Od3xz3Nu05iZGAEVHc0vrSje/JdY4CxmKhmkXAtPYEDX5KOdzZdwFSxMlSQKzDdo+DbpX
      wWAFexvMzsKJY5BOkzBZKYzF6SjvWHJvJAkJiU73Fl6eeI5qax337XyItXet5603fr0kqb73
      AcT0c2gdnWjddxNJpTFotNeNTniKixkeGiae0FDpLL2g7iykWzKCXcvdxTYS0+c5PBfmni0f
      J7NnFlMiB5c96E4dP8aata3s876F1WCnwFLI2spO3th/iKfu1mAafRv9A39Bg87JK73n6Cyr
      RF4YRO17AWnTHyMZrq6x/y7ZXJ75xTAzx/47cuPjVLV9Cd+sl+nxUUrKK1m3ZftSZ34PkiSj
      v/c/knz5TxCeOtIWD+H0IovpAIvpANFsmFQ+iUbSYtFacek9FBiKabC3YNFY0crXXtq4oWA7
      A6FuXpn4GcVSMYFohMZSD/PBOO2XbSdycbKhU2jdd1881umTxynvqEIf0lPuqFjyRKYClAgt
      c1YNVYsxqCqk2lDL8ckjbK3Zgcir2KdneD5n47OP72BL9dJEuNxhZc7vwxsKrXwEeC9CiGVv
      4K0ihEC38CZ7ZqfZ7llH5OABLFs2MBmXCCVzZC9ESGR5aSIquRthoR9S89C4CWrqyFVU8eP9
      A3y21YNmoA/GRiEaBUVBNhgptlTwtvd1GuytmE0WWtraMRiM7Hp9H2mlgQJriHzwHUYTFhxm
      N8W2a3cwRVGIh4OcHQ3w5LZ2Dk/MMLMoo504yVb9OIbarZiyUSL5NEdCI5RTgqzPOZUAACAA
      SURBVO74MLb2WiRJIp1Os3fXLszNForsJXxq7ed47syPaCqsJKmUcvy152i0xTC2P4VOo2Fs
      IYBDb0A/tofJlJPsbBfDsykCvnnCwUUSsRiZdAo1r4K0JHUe7n2Nja11LM6eZ867iKRxsqZ9
      7RUTXFWopPMpQplFpuOTDEf66Il002M30zezF28+REpkMGstlFuqWeNop8O9kRbnWupsTZSa
      K3Dq3Rg1JhRZc8OJs8dQiF3n5FjsHUJRhbUlDYzPhmivLbrQD1SSk/9MLtqHxlyFrHWQTqU4
      dugQI+Zhnln3eax6KyIQQYTiWJoqOOWdosXkQNJriIRj7B1+k/tq7qP/l/v4ZWyEr398Jxtq
      LiURF3zz2DKCQ4H5D48BoGYQwcMcD2XpHE8yarZQ1dpBmUN/QReTZyqcYWQhyXAgxUw0y6Kh
      ilTQi4jNI9tLOdA1Rd5oYu2OTqitW3KbhICJCejtwTi3QC6bZkzxU2GuRpJlnG437Z2dzM/7
      2ffOCBZHOdbMHkodBehM5df9QTVaLePjE2jc5fjieVqTIVyxd3DY1iFX1YDOSkl4jvNSmsqK
      QuwLGvLJNIYSN2dOnsDmtHM0fJjPdH4Rs95Cc1Eb3z/2D2yoXk8kmmJ4XtCybj2SLJNNpejq
      OUyjTcG18bOYw714mjZjLyjFYDAgVJVkPEYw4GfeO83E6BCFuVfQWB/CYGsjEXyJirWPElTD
      jEeH6Q+dp2vxNF2LpxiLDrGYDiBLCh5DEXW2NbQXbqM5mqJmdpSa1i9TaCzBqrWhU/Q3Hx3K
      JKHvTQj5wFWBTefAoxTSnTxMua2UvuE4W1rLAUFm7jVknRNDyROkZn6B1rmZc2dOExSLCBs8
      0PgwaiyJOuFHaalEo1E4MzNJR3klwh8hZ9Zx8uwRAl0jvChUSlJhPvPo41ckEeemp1jT2Mgb
      Z859eAwgHx8BNYs/riGUy+GpbMFdWIQiS9gMGgotOiocemrdRqpdBgotWnSKTNxYhjdvY3h0
      mIm4lqKSAkKpPImsSl7WoDgcyJUVSPUN4CmgQLVyPt6F5Vw/trkw5HPIRgPltXU0Nrdw6twQ
      x2IeasUAumw/irkeSVm+ZEpSaJjL6Sh0mKnzyJwZOMpdRTk0xg3IpW7QW2HiGMP5KkLKKCX1
      TSTe6MHYUMbuN1+nuLMMSV7KYgKYdCYqnVW82PV9ypxrcVks9HV3I6OSCi5SIiYoaLgHyehE
      0ppQ/F1oi1owmMxYbHYcbg/uwiIcRR7e7tuPrcpAotSFzxwk5CqiZ/QlZKMLq85BhaXmwtN8
      A83ODmptTZSaLn+aK8gFTeRH9kIuieKuX3JBbwahgq8b+l6GwgaIjoHPC54aFNnA6JxKwjBA
      MJpia30zuch5ctF+4o6nmE/qsMs+yMfZvec0E44Jvrj5q1gwovbPoLRUImmXRpz5WIS0Aq5A
      gqQ/zOmhYQar4nyi4yn0kUXWrd9wqUlCMDU2SnlNLTZV/vAYQGZhP5psEcrIPPuSk9zX+Sj6
      a6wSkiUJnSJj0St4zFrKHEYCg6e51zhAddNajHodqZxgPpphZCHFcCDFZCiNPysTNzsosNVw
      RDtIQ9kGNKEw9PfB0CC6RBxTVSUxITN4PoTPF8AtHyKrsfLO1Fm84RmqXNWoQtDvSzLoT1Is
      ghQYVCoKilgIHaLJ1YLQFKEULIVQk/E4VYYcDZX3s3f+dWqKWzj7/G5sjZWcih/nk2s/jVl3
      KUXvNLkwCpV9I29Q3/Ak3q7jpNJpduzYRnbmBMGCThxGMxidMHOMjLWYQC7CSKSfrsVTnFk4
      Ro//DDq1l9a2L9Mkaugo2kRH4RZcsQj6wDhNdZ/AqrOhU65fikSSJJTyjaTf+X+RS9YiG1dY
      BEAIiHqh9wUI+KH9U+Cpg4JmCPbAeDchWwVj016e7vg4R2YPotUFScz208PjhNMy/lgWh6se
      afZZ9vX78NSXcm/t/eR7JpHrS5Evq+NU4XDy9vAgYmAG76yPA2aFiqIEhUo7JYYM1fVNVzRv
      ZnKciupail3OD4cBCKGSmX0N/aAB89YH2TP9No+ufXLFQ+2kL8yLZ8I8uKEe3cQezMVNuK0m
      Su16alwGat0GSmx6LHqFrCqIpBSkXBVnQhHmDSX4CiqIFJWTlRT657y0JBLc7XAwHIrwk7EB
      Dk/up0TxcWxuiJqCTs7MZNFpJDZX2oimcoRmpzA4tJi9h4iZNmCzOpDtS3VN9836qY/1YSrb
      hMdYzOHsYSbPeamsKyWoj3NP7f1XXadz/Cgz86NMSoV88oGHGew+jyU6gL60kVPhJDntPF2L
      p5nJLpCfPcGwJo9d56De3sxa9ybMs2MUK07WFN2PfiKMFEoge2zYi9qYHXkDVc1idV6n8sRl
      SIoOuaiN9L5voal/6MZy7HQUhndB135w3AXrHoF3tT6SDJ4mSM0QGjjKdMpAVXElfWN20liZ
      1Zp5oK6ROreJYpuOY5NJDOkQZ3Mn+OK2f4NxLIxc7ER2XrmIJ+sPYdjfx64CwXlNhqZIlJo1
      VbxzfpxHW+twFl4qeJzP5/HNzlBSUYms+SDFcJchsmGkuUWk+mYi6RzkIJqOrGjfd19k/YWd
      bciFzVC5HXp/AalLVYQlScKglXGbtdS6jdxVZmFnvQe7s5uKggBNhSbMZgM+q4cpQxEHXRX8
      0lZGX3k1Gyoe5wvKM9wVrmKjpYbdfcM023x0lBhRZAmz2ULX2DzDcwdxWqs57g8iXSgckMpm
      Wczk0eQtEJmi2FRGmajCtMPCgYFdPFT/yBWdXwhBaCFAt1/Hw9v/HTUeieGI4BOfegZdfJxR
      Jc1o5gCxTJx213o2N32Vel0JD7i20uJch8dQiJzPMdT9Ap7qJ8mPzqKsKUcudpEfnAEBzVv/
      jKm+XxALXn/56OUo7jq0rU+RPvjfr6jPdAX5LEwdhsP/CEML0PF5aNsM713tJcmIuofRlDRS
      YHZzdDTI3UWneKQ0S2uxgb2zz5NR05h1CtUuPb8aVHGbNLjnw0gWA3LBlYEJoap4f7mfufZS
      QkJlTUkRBS4XdeZ6FjLdlJZcqQGKhIKYzJcM6ENhALlIDxp7K6K+EZ93hvaqTgb9Vy9qWY7j
      /TMUOEzUlDgBCZy1ULsT+p6HROCa+0mSzD3FD3Nm4R0M2gx2fZLxhV10ef8Bo+Yc97WW8I3t
      H2PrtseR7nuU8bav4gu2Mj3xc4K93yXR+zekva9hZ4GpRBb9Yj/26u1g0hO+8JCcCC5Q6XIj
      edYivKeX5BBvD2N1FBAxpDCdWrxUACyXZbivm/Gz+2mUBiirquax5m2Ekwmmpo4T8MgMDh/l
      Xq2H2vQiBYZidIoBqWLbUse7cJzpwZeZTjdjjwkkpxXJtNRpJJsJdWQORWumZfuf03vov5HN
      rHw9g2bN40vt7H/tyuy5UGFhEM7+AM6dA9EOOz8HpWVXzRnyqmA6nObtkTBvJiqpLDKxM/gD
      FkanmYyUsNa9kXbXel4af5ZwJoghNo/WUcrOii+RSe9GrriyeghAtG+SEyLOobCPv3j4UR4o
      rWHGoEOXNWE0RVHsSwYghGDeO8PoQB8VtZdGvw/eBcpkyAz+HO2aT5JVdfhmvdTUNXFq6hjr
      ytZfd9dUJsc/vnKabzyxHv3lL7XQ28BWBoOvgKV4aTK6DBpZQyDi59kzP+Ts1GkkycXDTU+x
      s+keLHoTeo2M/cIEvNJpwGNSOH/4PMMeI/e0fxPyMQjvB+s4HVkFnVqBHMwwoRVUOlwcmRhj
      XVkFRqMDxo8ynTbgXwiSsqfRFxqR+v0UF9eQyKfpO3saV0ERFemzGMo7kZyV+JJexuNnSAW0
      FOoG2FRWTvepUdD4cVpsKIZiJIMTvCfBXk4OlcO7/5qc5dO0W0wo9cWgqiBLSDYTIpxARJPo
      i8rQaI1M9jxLYeU9K9IZXZoP/H/Ixa3IJhfEfTD4Gix4YdYMtRtgwyZ4T8ZaCMFEMM2JqRhC
      CNpLzIwtjNFZoiEZ7qNB1aORnFhKS3EaPHiMRez1/pqj4++wkB3GYniECts4Gq0FWe+54rgn
      XtrHoRIdf/HIYxi0Wuw6PTp/nPP5FH3jM7TWluIxehju6yEWCdHWuQHDhfUHQtxEJvi93BYD
      EAJx8ggZ/RC68o8zOz2JxWanpLCc1/te4e7a+y8+bd7rJwshePHgAE2Vblqqr34yoDODoxoG
      XwWjCwyXSp+nsimOTRziZ2d+TDKVpKywlPubdpJIOVlXVolRu7zkwGa347F5eOv4Loqqa6go
      3UbO3s504DSerI4053AkhxmKJikbmaU7HmPD9AzSzCRSNILq7aNMY2af/zifS7RxpHyW+f4p
      Xu8ZoBJo8hjJeF8m7DKx338Ab2qeLTojvridVxe8bGz7CrJSzslTs5Saz9CXdFNo86AY7OA9
      xeT8Wd4ZgAeKO/Csq0FIMPn9N4gPTWModqEpc6POh5CyeSwVrYTmzxOPTGIvuLZS9HIkRYtS
      0kFm/1+j0WiQfD0gKmFWhc07oLLqKmlKThWcnI7SMztCc2GeOrcVs05P/0wvDeoBRmIbMdet
      xzj+BrqEFgpL0akq+XO/Yv/0HJ+r3EnO7eJ4LMlk4igxIVAkDXrFQGhiju+M9vB/PvkEtncX
      1WgVDHNBdp0/TmVdBf5YP8pcHrvTSd2a1ouLntTMIqnJf/mAlkS+y/Q0amQMuawBAP/cLG3r
      N6JVdFj1NhYTC6hHJkhO+yn55A60jku+mz+UoHvUx1/+znWW8xmd0PIM9P8KkdtKwGDn7eE9
      DPr66Cjt5Bvb/hiH0Ukqn+TFsWfJZxuuuT41vzCCiPtobtvCM6HP8/yJ5+goXUdv8Cy10RTp
      ok8TXghRX2HgLvk8E+M/Z4e7irhGRyKXR1gyWJOwR51mDRLThm6aRIqemjQP5BR0uV5mQ6fo
      c9sIBwJsFq2UNW1H8h9BqfAwJT/Edw//PX9y75+RzWY4cOwF2ta/xi+DSbbXNFCZjhKaPEB7
      6Zepa6kAk575lw5iX1ePrsDO3MuH0bmteO5Zh+pdRNZqaNjwh5x56z9gczfhLO688e+l5pGT
      CxiKm8mNHUVj3okkCdj58FVP/Uwuw2w0xFlvlm7vr7HpIxwYMbKYWCCvZhGJWXRSJ+SDyJlK
      Di828k3zYaQjUXzOCL3zfTRaWrirdSeqUc/uQSdtJoVwrJ/uTJDFVACvL8ymrZVImgRCmJGk
      pfcI28pLyL4SQC6v5tzMIT798OdxupZGjnhkivj8IcxMoi95+ia0QEJlcnwUo9WB5sKLst/X
      CJBKwtHDZFtkFPsa0jkLoeACpRVVSJJEKL5AaGgEw5lFnOWFzB/sQlIk9MVLNeu/9+ppntze
      SLHr+mU98rJCfy7PQs/POD19guqKLTy99rM0F7dh0C49NTSyFlQ9C2o/La6rq0bk57pJ7fsW
      qvcM2uYnqKqsxTs/zVhklHhqCOewxELJJnJRP0UVzWSt1Zw/8m125R9mX7iYkXw1+3uTrDGY
      6RMxnr7nL5HzFWhFFa0NWzjvH8NvauJIMsiGqsfYUf0UdsxIQz2w0IUx7SGmLcZmt/LO6Bt8
      bNOTKPpCgqOH2NZazwl/loVAD622WsocLRjWlBM+O0x2MUrBzvXonFbs6+oAibnXj5JTVXTJ
      LIrdirt6Kz2HvkVBxQ402msI0oSA8AQMvAJaExTdA12TqOYs0o6PIV2QjMTTMbpmz/Lr3pd4
      Y+AkqXw1naVGHl2zkW0193BXxdK/HfIEOmMDbncr3riXU9MH6U0MMKlPU5OepG/8CIcVKxuV
      GIXlHRiMLuwGDf1hDy35gzRWfJYpn4nkoszWNTX0hs7RFzyPx1CISWMGvYb+k8fY0dZM1JDB
      bnVRai8mn0tydve/ZXH2BDVb/mbJhRQrlHTm4z5m4nqkbILS4sKlwlUX1lUCK/p/VVWRZZnE
      669jiEZIeGeRNvnIdpXi8xSjCwZxyVqMTR3MLE7x8vxBnvZW4CgvQFNUwuxbh9A2tTCrUzkw
      EeTrZeKaiykSisr54ixncpO4+r3cLVVRX6FAQT2J0avXApwoKcCn9NOsK6R29JJ6UjFFkBbf
      IpPfjoZzYN+ImnOSyqb5W+NRnmmsZfGwh7DOzdoqC3GR4yTD1PheoIj7KZVqiEkSb02MsXVz
      LWW6RealDmIT41SpErIsM6R4CWutnErF2WGqovVCvSFjSZ58YJHMjCButDK69WFCk88RMul4
      bN7D7NwM7vvi6Gbr6I69TnvNg8z5CyiKqoTGIriKJeT3vPBP5FVio/NkDIXYmxvRigDB+RMs
      lM5TG92BJK68o4pZwdqoIdXbRyriwVxZj+SdJhaNImv3ESp+jAGrln5DiMjkKBWzOSybv4wt
      KNERGEH3nheraxrSeNNzTETb2BiMkgT8Hic/7c3yTfssc3k/1c0pxoJmWuMOBnSH6dR8EhmF
      k846XJZpDMoo3+lz85/1BvQmAygKc4Q5bJ3C5anFtujh0NHTPG5zsCACPF8l8wc0kFT2IvdE
      iBkTlJvuwZCxLG8AIf8MvrBKfX3FxTCRmo1zvmeY0spaCl3WKzr2zZI/dw45FiFXV0Em9Dw6
      15c523WO9pIapEAcTX05WW2eb735X/mLe/8cjUEH3gjCpBDPCI78cA9N25uo2Nx4ZRgR8Ian
      2Te0m+m0j83ND7K5oBNT/kJ5Phnk+YPkkyyFSy+YjwB+OTLA4/X1vBF4mQet92PXOchNHCI/
      /CL6+/8KZDMiNEi29yV02/6MvFD50fD3uNcfYZZH6Etp2eiW+d7sIA+bT9FRuY5MbIH61t9l
      1643qGpq5OWZ5/mG2UO0+H7KS2qQLrv1ieEBhvac5tkqB3/5wIOYtRrk0RcRdU8i0AASR0MS
      9bo0Z/qe52xwkM9v+Boei8Tosf+CUdmJL1mJ3TVJl7eAhzdvxO5afvK/dM0y0aFZFg+cwd5e
      TbRwkHTQS0Pn/3HhR8rA1BFkNYhU/yD5hBZOHEOqKGfKqeP01AkGAufRJqbpXP87dJRtRpfU
      cGwmSUVlAfVKCuk9IdN8fIRc+hCD0qNIkoY2hwshSRw/dZw952cpzsxidQfYWOShrrKKfCrH
      jDZFMhKkfu3vk5M17JlOUZ7832hn22i6+4Gln1CSkMMhUqdPMqKd52xhnMGzKT6z5j4aWpv5
      z4e/xRdMQVS5jPaO/8Di4jkWpo7SsPYPlp8DTE0Nc/jgFJV/8iXezcXKWjPr1q1deS+/5p0X
      KBKwaTPEu9A4W0lIEsa8Bq3ejLy1GkmrITU2izkkEbRBic2DsNrJ905xNJElsXMTplSMuV1n
      Kfr4ViSbga7Zs+wf3oNG1nL/ukf5clELirzM5TmfRDO6GyLnoPZBkGTCqSQGsxmbp5i7TR/j
      oO8dHo27UKd3Y/rE/0AyLk2ghdtFtusHKFYdE5lZ1piNnJ+eoWtyH15TG16dls9WV6IJ7Kd0
      zRP0Hv5vpAwG5mNRyoo1yGNaMtYqahxZ8HiuaJau9/vUbmlk/akAPxsf5ffXlCB5qqHgUhW7
      dkuO0zMxHr37d2l/4zl+0vdzWqo7cWVz+GMzHIpV82ceBbmlnDdiftY7jDQVXrvis6vAja2p
      ksDLR2DUQdBwgIWG8xSZi2D2OJSvg6K1pOe9jB57hdP6EBPB83iyhXTWbeDhbV9AP3WM3Ojb
      BCs+xqlIgvXNTjxmLZJ06QWHQgjUtI9ccD/G2j8gMumj2unGn0xx8thRhvv7wFDKA1/6PSID
      f02xdSfctRnN4jCVEwcYjvaSlBawuJqYHz6LGnuAB9rPIbuXqlMIIZgOBwmUldFeuYOKnlOc
      rBqg29WLXc1Qo4szFsmSqnyMNQ4HHte9jA78GNVpWX4OIKkSKTVHXX0N13rG3/IcQJKgqBgU
      hYzvLeRgBVMjsxS3r8FcWYKkyAgh8L1+DKnBQ0iKUeOuQ9IopIQgOjLHPQ+2Y19TSVyb5aXX
      /olXpl9H1ig80f4p7m94iCJrMfK1QnuSvJQriEwv6VRcdQz6/dgNRkpsdiwaKwtzJ/D7z1J1
      339BMtgua7qMSMfIB8c4mJ9k82KK9HQFu02D6BIG/q/ND2B2psmnFyhr/BjTAy8wMqWjurae
      3dNv8GTL01RKZUiJc0hFHUttAUQuQ/b0D7E++m8pM1nZdewka/TjWBseXPK5L2DQysxFM2gN
      ekpLK9ns03AscpTzSS0bKwULA7M4NeU0V+VobL6XrrkZeuZmKbbaMWiXz+DKJj2mikJMRiPG
      nA1N8E3UeJZ0yxOciwV4tetX7Bl9i2RFGetbHuDx1k+yqWobZfZydBo9krOGbn+WmWieu9dU
      YDcu6XNEPkE+Pkxm4QAZ3y7ysQEMpU+Rk5ycHB+lZ+9e/LNe1q3fQF19HQs5E1aLDnXiNapa
      P4/ssIDJjVTUgctWAaNv0RtKMeqL4Eq6MDoiWHUg64sY6u0mn83SvLYTxW7nxIyPQKyIjvQJ
      urOL+GWBwbOVzbU7ODAySFNhCYm4lwMLh68eAdR8nlQ6jcir3Jk38i75oao3QD48hbb4CaKh
      8zQWXioVkg3FyCcz3NV5H788+1Pub3gIIQQ/PT3OPQ4T0xNd7AscYSEeYNtDd3P/kBZ64jhr
      zSuTT0gyVN0LM8eg/yUm8lVsr2tGCEH2/M9ZOzvIrsZm6kQSN1dOsjWNjzC2+8+wrNlCzJvl
      ZVVDdWkd2WCA/V3HaW4IE08XIAQYraWcPnGUinWdWAwWmuvWoo7MIUJWpPAkOJf06f9/e+8d
      Z9dV3v1+dzm99+m9aDTqbSTLVrGNjI0LmNCJIUBIo4SQvKRDSMJLXu69wE24eUkIgQTeECCA
      jW3cm2SrWBr1rul95rSZ08ve+/5xpJFGUzQjjaxxfL4f+w+d2WXtc9az11rPep7fowwdQfS3
      IMh6XOub+R0lSiS2D6ds5+pl6YoSM/t7Y/jr/aiVAVpe7+CO9X/E98//Bw1NEV4aGMXRO0Zp
      ZYS7G1voi0Z48sxx6txe1lVUz6jDKdoE9LpjSJ4B9ooV7Dv7OKbOQ6zU3Ny34QHKtm5EkqaP
      pqmcwv7eGJ6arWza/wWkkg+TEWMoiQtoahZNV4ZiqCdn28RELMO554/R3/s4yfpqPvK+D2C3
      2xEEgbGhQUzCMCePPcV28ypE/xUxR6KMUNFGb3QQR9ePeES3kkyVj/3qTjzDP0SkglQizqqN
      mydHg1i0j9UlFxjqstKc0wiU1fNyfzvvMHu4IzFCbP8e/EKGnRPR6QaQSYzTNziMAvPO1l8Q
      mobaMYgqRZDsZYyTw+lyTxlNIvtO4WprwWLxEUmGUVSF7pEwB3pfJdQYwXFWx12r7qe+shVR
      ENHqNVLdwwz86AWc65twbmhGuNboJAhQ3oYqHWFNx15c8nJyh76HGunGcveX2ZaP8PLQUzxY
      /QHkK6ZSgsnFyfrVtI3H+bekgQ+8/W5q/A6+mfkbMvE0Z48+RWXrp5mIRhD1lVSXdXE8eYqH
      N3+gUBvLZ0eL18PwYXDWoAG54z9Bv/ETF5slUOYZ50y8kr379vLxO7ZNMWqbQcZn0XEhlEJL
      vEaVYT1+zcJDXZu5sGWCDuEsT5zR8xvlryAufzdVLjdljvUcGejnJ0cPsbm6jlq35+JbOguD
      B+k9/wxPxoNkjWWsNDbw6w0Oct37KDFtJ3M0Qc4bQ/Q7JztYLpslnNY41DtMq6UDb6qDoMdA
      zyv/xnDURoYSsooRUQyjNyQwGo1Y7XbqGhu5+977+M+jhyY7PxREc41kGR/bQ+D2PwDD1G6Z
      yuX4TqfGg7IJJaJQV36OZZkRTilr8J76D+pXPDLZNiV+jkbXYSoaHqH3/ONYlA6aKcPjKGdI
      jXPcOMGAIPDO+ocZ3fO16QZgsrtxO0wcOXAK5b67F9y/r4UG5Lr/CZatQratYKS7j4ray1vT
      aiZHomsI/64NCKJEib2cf93/TxzrOc99t9/G9oYP4VRNKJ3DCBUUqoUIAubaUqo/dh9jzx+i
      79+fpeSBLejd9lnbAYAgMGCqZtA4QPner6NpIoY7/wJBkvHJfqqt9RwKvkab/w4uvQ6C6VE6
      IuNsSQq8LdnCyspKBEFgk3c90ZIJUofTpLIiHWdOcWjfBRpbkogGP3XeQkKGYDOh4kDLJBCy
      MdRIL4gyorep0KZ8GuJDbN/+IfY++wztrx9l3cbVU4ygNWDh+fNh7P1dNOz6IrlfPgE15bx3
      y3s5dfz/4j+UUxzt2ketrRVn5TJkUWJDZTXN/gDPnzvB3q79rDQkqE0MEzb7mGh6Bx/2LsOo
      Sogv7iYYVzlpdpAPdDLcYWfs699CrvWjiSmshigZ9wrs5fW02Y6jKjaGMi0o7i1UmwZp7PoV
      jvt+C4PRVEhcumpETudyGK7KtNMbjPhs4HVqWCqucmxoGv/82h7ub11FXbeHTvEfqWr+DrUT
      A3T3g1F3ErNRQ1PzKKOvku95HDFqR+x4Eb98GqvzI9DYxkTkFL2Rbu5Z+Ul+fvx1yiy1CDV3
      TV8DxCNj9AwEaVm9ihKve9ZR4HrXAIIgoGViZIceQ656P/29A9Q0Xn7o6OHz6F02LLWFxZ/b
      4uFExwS15u28f+tdmHQmBJ2Mpqho4XhhrnixkYIsYWkoR++0MvToq6CoGMvmlvc4MtCHt+tX
      OC129HYfgrsOZCMgEDCXcSj4Gi69F6vORk5ReLbvVzjDeRoGRjCVb8HaWIGmqsgdOf7l7E/Z
      tXYXx44MMjI4RF3TCtqjr3Dn2o9S5qi4/PzxNEgCZIbJHPkR+o0fL5Q6EgQYPgImD6KziuaS
      Uv7xhRdYiwlL6eXnEEWBWP+LJAMPY+sdYc+ZIGucGYx19Xh9y1mr72XU0kzy1IsMqw4MFiNH
      Bw/x1KlH6e9/ng2pbpSIynF9K13nYvSf6qVz7z7KuzvpEuFEMoNRV08+9QJWn5Pl6y3U+/qp
      8yuM+zZTWrWFrcuqsHrXYvEsw+OvxusP4CytRx85ixQfQC6dWYU7lEwwF1AwqAAAIABJREFU
      nkpRf4U6niAIRIdexalY8a69a8ro/eL5c0RSSd7VsoLgU0fwb9tE/7lf4Gt+J2M9HfRKy6kd
      /BnC0F5ERSSn+vj3nnosutfpSTZidDbili14y6v5+bGfcHfj2wklMph0OgK+hukjgCRLiAIM
      9vbR0FzP9ZVimBupYSdEHiU0GsbjD0x+UZqqEm0/R+WHd00e6zSW0tFr5KP3+jk3OoLGRYkN
      SUMZGEIgDUY9GlpBX0bT0PSg3LOKCy8fQejoxH1bK8gimkbhqMJ/aJrGwc6zrNGsRMoeRIsN
      saz9h4TKdzKiGNAAOdPIkz2/pMGwg91dp6mpjPN+j5PhwTJs3os6Ppk8OUGmJCVzTMvzrve+
      jx//4N9ZsamN55//CS2euinPL/jsaEOl0P8zBJ2JR0+riMJZHtraVAgvaH0PAAGbjXu2tvF/
      Hn+ZjxsM2FtrQYDU+AD5vscQmzYxEExwOFDK5lWV8NoexB13YvXdwZrMKLKwnK+d+RcyHQ5K
      BRcrE2HaGjYSsa8iIdoR9TJHRQNbzFaWjY4htG3CZUjTFD1JfvAoGameMxeeJrD6j0kaP8TB
      QYV6LY387KuEm6tw39aKZLyihwgC+i2/S+qxzyKVrEAqWcnVRFNJHDNogWrp01zIbKRJEidf
      un2RCM+cPc1f3Xs/kb2ncG5oxlW/nNG+Vzh98L/wOFqwu2s5OljFqupKZNcG+nb/DMZfxLl6
      FcaSjQSDQRoicfTVftxmN8OxISocLvqjUcqqaqYbgN7sYNPmzQuq2LFQ1HQPQkZk6MhzNN99
      WfE42T2MwedEthScr6qm8a3dL1NRb+TQQA+CAAJCYdqDgKAD7cQpRI+9kB3E5ZghARBWloOm
      0fHiflA1HGvqC8MyAihpJk48RqpsG+PVb2MiFgOsyK42avue47TUjGYrRcCEz1hLe+hVAj49
      m60NCLkxMpEcjv7/QtuwDS2Zxu23sNWdpCM9zoQwwSc//VmeOfck9YJCarwbk/mywpxgM6F2
      aaBo5Brup/2FIUx6mUbrOK1W3xTPz93NyzjQ1cmBJ19hs1GPpa6UzgP/TGXDexh/9RAXNq1H
      bT+Dq6kO8kk40o5u3VZS3f8Mvmb+h7gd0d2IMHIUyt8BvuWUXPI+pVM0d5/g4MRpHBU5TENH
      MVlKka3LMLV8FMO5CRpXbmfvmS7Ukla21tqxGdyoDe8geugcvd99EsfaRpwbmtEkkVSuUO0+
      svq3GX7+X4iv+TihZJJwMkEokcAgy2hoVDpd6ESZErsdh9GEXlSJjnRyKraROzN5TEKKVKiH
      fzjYwWe27UCHQPTweWp/5yEEQaC57Q946ccfYfuvfR+DxcTz4zuJGa24gHjwKLfXp6hd9VFC
      wSBnT59CKG+CeJoNlW0c7N3PzsZ7OTk8iMYMBnC9m1sLIT9xErH1t1H2H8ZkKnR2TdMI7z2J
      787LEaCvnOtAROTzd901q0GqoRjqaBRp2ez5u+qqtYy9cJjM8RAlD2xBZ5NJP/uXnK5qYG3T
      CtZVVE09IVXPA2d+ARXN4KxB1Vp5ovcnxHMxquMTZOQ6dL4IosmGGrwASSeiPEpc9fPwmg/y
      k8M/5Hdv/xztfQf40JoPEx09hrv08nMJoohg0aOEDHScOMi21W9nQ3MZPS9+h/jWd03xO0mi
      yCe23sE3Yk9R+dQ+fMsDJJID2A7kKL99BTG9TNv6i+uH5a2wZzdCdzfG8veS6vkOZrEaIRuH
      lR8CSY+qJFCTXeQnTqGEzyGVudnqaCEuV/N8T4hSo5tN9hpEWSbfYOPcGT0pnUDd+E8Ziz3M
      mZEE4USCkC5BsMnCSPte8ucPo6Bh87owGw24TGZcDQ9hO/yvrN35OdxWGyZZh4rGk6eO4zRZ
      OD0yzIvnzzGeTmFPnMScDdAjxfiv3U9QO/A4+zIu3r7+7ZQ5HEQPnsW+sg5RJxfCmofClDa+
      nwuHvsmKbX/F5mobe7omuKMShsMHaL3nHxFFCZfbQyQcQvA7UUejrKxcy9df+irvaH0nqVyO
      oYnwGx8MV1AIyxNO2nHn+1G6diPX7yQXiaFmchhKCi6w/rFxfnDgAP/zXQ/OORoJbitCNI42
      HEUonTllT9Tr8N+zkVTfKAM/fgGz7iSurXfRr5Zzu3uGKimTQXQ/h3wG0dvEzrL7iKdGkTp3
      Exkvx9pcic7zELlTjyL73kcwepBz49U8ZCrFbyvhu/v/N8tLVhIoWcfZA9+46jtQyfX8DKX0
      Icw9j7KjxY1eSpF3m/mHp7v5/PtK0cmXX0SlDgd3LGtmn9jLmlMvIooOjE1+LI0VtD/ejrOs
      lPG0gtMkQ9sWeOE5RMdm9N6dpOOn0bkrUYLPoSQ6Qc0j9WWQjY1oK3+PtGQkmEkTSiRwGG08
      f/YMjx0/RqUzgM9WzdlgB+r4CIq2j56BBCXV2/BYLLQESvDU1WO7bSv6vErs1ZOke0fxbG/G
      2lSJIEJGOYkw8hK6sg9PvpyMOh1vX7Z8iuTM0Rdew6m68CkZwoKH/lW/TQMKm85/C7W+icj+
      01R/4mI+Qi7H6OAA67d+gFOv/i2jPS8SqLmTFSUmnj74AodG29jhLWSASZKEqqiFXIjuEUy6
      EqwGK0MTA4zG2vnu/vY33gAEQcBY8UHG9r9Gy/aPkX3lK0h1O4jsO4V78/JCHm0mx9eefIl7
      17Tgs84d7CYIAmJNAOVED4LDjGCeOYFdEASMXh1+/3PEuJf+AwLx1tTs5TkNNlj+nkkjsAZW
      Yk1cQPM0kzg8TNm7tyNZasi+/h00S4xo9BQm17uIJbM8uOJhvvLsF/ng+o9gMNjIpsOoag5R
      LGxGqUNH0ZQx4qE4fVolTeGTkE/ja7mdZlR+9srpKWK26kSSt6k2vmoW8FcGadG24du5BlXT
      6Bud4KHtK2gfiLOj3oGo18OWreRf201sy1YGwwcZ7PwhUbGKKI2Mh5OkJsZJOUR0u1/FpNNj
      Mxpwmy14LBbuW76S8bTIWEJAI8jv3r4eTxYynS0c7f9/WFX/Hsz26SrTlnvbyEXjjL3QTvi1
      E/juXIep7bdI/fL3kUpWIpWtASCnKsgXBXKVcCeZw/9OcvAkrTu+QiKUJIKDrWsLI5pS5Sb8
      o69hqf8gokGHpml0nT9LVX0joijR3PY5Dj31KZyBNagDz2BVFFwtD2Ix6Sd/c5vdzkRsAqvN
      hDaeZH1lG197/m9YXno7bsuGBRTK1jTS6TSmBRQzmI10KokoShjclWTsZeS6DpDoHsZ/zyZU
      VeM7vzpEWpfi/tbpi6iZECQRqb4U5cIgUms1wgxCsGpshPTTf4ah7ZOYKzbS1dGDof0YkexJ
      XG3LZzwHnakwEpx9DPIpCJ1DqboXlP3ItkJdK7luF5lkGEk2Uh4oLYg8ufx8+d6/Qy8XjNFg
      8pBOjGK2lRfynw99H7HtU/S8Ps62Tdug7+cgiAg1O3jwNpGv/2Qfh88Ps66xBDU4gToYRt9S
      yceqHRx48vuUvvc+BEmibziK12lClvIkMnGePTtBV6iHsXiMVCKB7dGfU9K0Er/XTlUwyJpw
      CNeWrZhcbkw63bRi3HlVo70/jsWgsb3eSjBh48ULZymx2dlYWkpz+sOceOXLrL/nm0i66f1A
      57RS9vA2MqMRxp5vR9uj4t38aTK7v4LxwW+iGRyIgDZyktThH4CSZdxbiztwG1LlchxaD5Hh
      yzWSRU8DceUOfNnHQNtAOp0hNh6lcXmh1KlOb6Nxw+9x9PkvIIgy6ywrOG4wMzyRpcReMAKf
      309wdBRbSQXacITN9VtZVbaGrCLx+KmxhSTEKHR09OLxuCfT+K43HHqguwuXx4vV7kBwVBD6
      ybcxr7kbU3WA5w518uOjh/jMrtupnml6MguCTrroGo0hOi1T0vHUaB/pZ/4Mw+2/j1y+DkEQ
      OBYZpamxDl1fiNCe45gq/JOL7ymIEniaYOgwyHriUSeiQYelrlC+STCUM3LmcYzVzeQM9cQS
      GerL3VPikFKxQdR8GqurHmWwHS3aS7uwgZ5gnFa7GdGUAVs5OKsRRYHWWh/ffeIw621GdPE0
      UksFgl6HkOznyIXX2T3u4uhAP788cZxRJcKF0CgGWSGnOthQ6eOeZct4+8rVbENgrSTRlEpS
      IQh4dtyJxeFEL8vTppWxTJ49XROU2vWsKrUgiSI2g5Fl/hLi2QwvDfVg1blxpVUGx57DV3n7
      rGsu2WLCtqIWvdvG2MunSYYkpNHnSVjcDHbso3ZsL/p1j6Bb8yG6O5+kvOYdGN2laMDw4ABV
      VYW9lcSFAdR0HlulhNL1MhfGzdTUN2IyX44zMlnLyOdi1K36CJ2HdhM2NJLUmSi369FJIvFY
      jGgkTGVjPWrfGFKJG6POhCzJnA/Os0aYkk0xGomhqTnSmRwGvXxD4rjxWIzSqpqC8KytkkSm
      lfJqmXO9Qf5zzzHWLPOzrqJyRmHaOfE74NwgudAEgrPwJanhTnIvfQX99i+geRrJ5/MXo0aj
      bKyoRn+nl8xAkMGfvYylpRrX5paZd5Hr7wNNYeIXe3FtWT7ZNi2RI5w8S61rB4GMmdfPDk5r
      t93bykjPi3grd5A5+D3kLZ/l6cc7+PQ7N6D2jqK13FEwtIvnWXQSn11XzdHT/WzctRrQIJ9n
      rO817tz4bgZ0NXgtVvrOZvn8r23BfnHaNxjL0R/NYJZ1qIqC2roC6cA+NH8AtfaiK3aG77R/
      PMOZsQzryy24TNI0Md0WX4Bal5v9vd1EYk34hk/Re/oXlDc9OOfPoSt1U/ahu0l1tRJ6bi/D
      P3sG0+o2lIb3oNpcqLk08eFzWDa1kM/nMVss5FKJyfuPvXSY0nfdgejcTPTlb5HXwlgda6Z9
      vxXL3geaQs9gkIZmO8vLLOzpGmdHnR2vz0/n+fOFazrM5EMTCC4rwXiOSHKGUIiZkPQmSnx6
      DLJUmHOLhYC16/EYaZpGzfIVGAyFHy1xYQCDS0fs2I/43uA2zGV5fmPzdmRJJDHew1DH05jt
      FZTV3zuvEkFaYynKqT4kuwU1eo78y1/D9LYvIbpqJo+ZSKcwyDLmi22Qq0uo/th9BF86wuAP
      nqPkgdsw+JzTrq3mRXLhGOYyL8LFZ88m4qRzfRi6dhNY+UlCEynkq3Y67Z4Guo79K4wcQbL4
      ODVuoSrgxOu2oYTjCCkV0XkxTzWXRzk/iCvgJJZR+OkrZ/jwrlWFzaKRw6y44y+oNnsZT6Qx
      yXpctsu1EiqdEj3RLMGUSonton9+6x0IzKx+oKgaR4cSJLIKOxucGOTZR3SrLHNXUwsjpeW8
      fEYicvTvcfqW4fAtn/WcS9iaKrE2lBPq7MQ5GmXi9bNkguOkTX0YhUqyY+MYAm4kvYx6cRcg
      OxhGZ7Ng8BRUIPosG6ka/jmMeJHL103/bcJ99CeNrC514bfpqc4oHBtOsTrgJxIOI8syWsCF
      0juG7HMSSmXwWeT5q0IIooTb48F4g1XFAZ44c4L8xREkvPck7vsf4rsXyigvzbPMq4OhZzj4
      1Ke40P5tbO4GYqFzHHn+f5Cc6Lt2O/U6xCof+eMnybzyf2O852+mdH6Ankh42vRK1Mn47l6P
      f9dGhn6+m9Ce42hXvQkzw2EMPsdk50fTiIXOYq/dijp8HKtOJZbMThsZZb0dTVVI7f828rqP
      8OS+C7xjSyENVPDZ0cYKEi5aKotyqg+xxI1U5ubetkbCsTT7Tw+Qy0ygqjn0pkK7T3aN0Voz
      tdawIAisK7dybDBB/hqa+4mswssd45hkka019jk7/5UEbHZ+bd0WWho+TfsLX+bs4AXUecwE
      BFEkhkLZ8jrK3r2dmt98gFzZMIHqOxlvP0/f95+i93tPoQ8mCHb0EHyhHe+ONQiCQGhsBKPZ
      jGvXn5Dd8w3U8YFp11dGTjCklVDuLcQYNXlNZBWN/phSGPU1DcwGyOTQFIVgIsfqMv+t8QJZ
      9Xom0imsKQU1r/BiZz824Ty+kV9QWVaPJL+N1Tv+Fv1FJbJAzV2Mj53g5J6/xVu5lerl70OU
      Ztuj1lBjJ1CGT2LY+CVEe/m0I7rDQW6rmV5xURAETBU+qn7jXoIvH6X3+09Tcv9tGPyF0SB2
      ugfrssulijRFJRh8Hd+6O5H0PsSBvYCObF7BoJOnXNdsLydjVBiIWXBaDQRchSlaYVNsBDUa
      R+0eRWoondQVEgX4+DvW8tUf7sGczeL0Xw4vaD83xAO3NU17Boteospl4PRIkhUllhnVDIcm
      MhwdTLCuworPoluw1qcoSTSt2YwjOcLul7/MsZZPsb1+GT6rbc5rRVOXvW4aColoJyvf+UUE
      Wb4YyJai97XDjBw7Q4nfgyHgQlNVus+dZeWGNkSjEcNdf076mT/H9ODfTyl6lx8+hepsQK+T
      Jr/zjZVWXrgQRdVbSMTjWG02BLcNZWyCTF6j2u24NbpALpOZUCxC/+u/ZFB+FLn/G+jKdLjk
      Mjbd+RUqmt852fkvPYzTv5J1u74Jmsqhpz/D+NhJuKq4jqZp5DteJNv+b+i3P4wWzaMlplYN
      zCkKsUwG9xy1r0SdjO+udfjv2cjQL3YT2n0MNa+Q7B7GUntZaEnLZBlPd+D0r0K37H7yZ57A
      ZtITS06tsKKpCpaxThL+Jn659xz3b7kc+ySIIoLVVOj8LZWTnf8SVpOej923lj2vPoa7bAsA
      eUVlJJKYLPp9NY1eE8OxLLHM1LmyqmkcG0pwdizF9noHfuvc0ohzIehkAm0PsNrRSlV8L7u7
      zvPihbOkcrNXl0nmspOKG5HBQ7gCayaFswRBQLaZybt9UOPBf28bgiAw1N+H2+dHf3G6Knka
      0a//COlnv4imXlyHaRrh4V5cvqkiWDpJZEu1HWNjG6FIwbsklriYGJnAphPQibdAGU7TNEwj
      z9D94h/SceYVnhxvo37H1+gybWHr+neQP/nzWc+VZAM1Kx9h+dY/oePIv3B2/zfJXxR30jSN
      /NknyZ18FNN9/wvR6kZqKEW5MIR2RfG5kdgE/mu8qeDiaFBeGA3UbI6ef34cQZaQTJc9Reno
      ELLTjc5gRbCXgSjhEUKMRadWo1T6D2ATDZw6cwBREKaUKgUQa/xIK2sQZple1pY6aPDG+eXh
      DJqm0T0cpcJnn7XulyQKrC230j4Qn5yepHIqr3SOIwDbah2YdDe+4y8Y9TRs+xS6kTNsc2Uo
      szv42bHDnBgaQFWnZpNcKpF0yfs03PksJfW7pv0OFquFwZFCGVVFydPf3UlVfePl4wQBqXY7
      UulKsq/9QyFhX83TMxyhOjBdzt5ulFlX46ErUygzJehlQmU+PNEY2lD41owAgbp7GJfez4nQ
      HXzwgQf45ZkTvH/dBozL7iPf8RJafnqt10sIgoDFUc3au76G1d3Aoac/y1jfHnInfkq+8yWM
      9/5PhItCWIKloIqm9oxO6gt1hoPUebyzXv9qRJ2M9851lD60Fd/OtVOSJMKjh/BUFKrRC4KA
      btkDeMdemVJBXlMVsu0/wHHHH5GMDXH/loZpP7ogSzPvQ1wkOdGP31tGMiuy+1gv7eeGWNdU
      MuvxAB6LDqteoieSYTSe5eWOKE0+EytKzIji4sV5iVYLrTu+SMf+/49qs8avrV5HKJngp8fa
      Gb5YDhUgnc9NZqWpSp6JsTM4SlZMu57faaFnLE42k6G3s4Oy6pppTgVBENCtewQtHSV3+jHU
      cCd9GQfVgemOCwC3LsfJQ/s5M1oIXgwm8gSWlaAlMm+8AQiCgNddzagGq+7diGbIkVcVVpaW
      IehMyHXbyZ97+trXESXKG+9nzV1/x+Der3Py8LcRbv99hKukPYRSF1o6hxopqJINjkcpd8z8
      Rc3VZmOZF3PN1E4XGn0db/nmyX9L1ZsJ6GIMhy8bgNK3D9FRwZjmI56RqJ7/1sYk4cHX8ZS3
      8dF71/DcwU72n+qnpXoGMbAr2wysKrVwcjjBiaEkd9Q5KLNfh7b/PDB4SljW9oecePmvkFHY
      Xt/EXY3LeK2nk+fOnyaZzTKeSuEwFjYPowPtOEtWzejV87nMjCYgODJMcGSIssqZy8MKgohh
      x5+QO/srckd+yABlVM4wAgB4fX5M470MTWQZiWUZz+RxmHWIDaW3ZgQYPdGDbDawbVMD/+fQ
      6/z6hrbJH0a34mFypx5FU6cXdrsaTVPh2E9p9q2jcueXOPrKXzJw7rEp5wqCgNRQito7Riye
      QC9JGBah6HM+lyKTDk0JCxBkI2XLtzISKgj7aqpC9vAP0a9/hCf2nsfubSYWvnaVy6sJDe7H
      U74Js0HHbz6wjmXVPizGaz+DXhbZ2eBke70Di/7mBjk6K9dQUnM3Z18rCOh6LFbeuWIN1S4P
      Pz9+mAO93TgvRhEUpj8zF/42G3SkND3nTh6jpqF5zs1WQTZg3PW35PsOMiaVU+K2zHicTqdD
      yeXYUmPjYH8cvShOTsVuyRog9NpJbFYTvzpzkpZAKSX2KxLPDXakkpUo3Xvmvo6qkNnzDcin
      MGz/Y7yVt7N+1/9LPNrN4ec+TyLaffmaehmxykfXiXNUu67jFTwDE6HT2OwN095irta7mIiE
      Cl6N3r2IzmqiuBkIxrht052Mjx5b0H2UXIpsOorJUhh9Kv0OfvP+dfN+k1v0EtIiTnnmoqL1
      3ahansHjv5ic7zf5Arxn9Xo8FgsVTjdqLsd48BQO/8xhLoIgIJsseAMleANzT/MARIsH4wf+
      E9FZPS2048prGk0mtGyajZVW6jyFdVwum701I8Cy92zDVeLj2TOneXj1VVIrgoBu1fvJHvvP
      WXeaNSVH5qWvIujN6Ld+drITynoLTRs/Tf263+LU3v9F55F/RckXRKYEl5Veo0Y1MwfLLZRg
      7x68gbZpn5tcpSiKQjY6WHj7r3uEX+2/wK4NdTi9zUyEF1ZreTx0GruneV6bgLcaQRBpue2P
      GOh+gljP0cnfTy/LbK1toMRmZ7zvMI7SlYhzPI/VbKKyadW8jXw0CX7X7EGTgiDg9fkIjo3h
      t+qpcRcMYHho6NasAfReB92hMPe0LJ9RiFawlSBa/ShDR6f9TctnSD//V4jOSvSbfmuasrEg
      CDi8Lazf9Q1EWc+hpz9DZOQoeVUlpuZxhFPTXKMLRdNUokPHcHinV80UBAGrw0noma8iuutI
      yG7O9AbZsKwMvclDPhufNMr5EOzfi7fithtq7xuJpDOxYseXOHXga+TGRqYVIh/ueIaSuruZ
      S3Ih4LIwEpm/dHvv8PiMHqAr8QcCjI2MTPmsr6fn1owAA+NRTgwNYDPOHrqsW/Mhckd+yJW+
      fi2XJP3MnyOVrkG39tfnfEOIkp6aFR9ixR1/QffxH9D+ylcoMeuQZ3CNLpR0fBg5LaGzzZx/
      4HU7CYZC6Nf9Os8d7GTHmmp0soQgiJisJaTiQ/O6j6ZpjI8ex+Gb7i1ZypjtldS1fZKTL/81
      6sRll7CaShONnMIZmFtgze+yMBpJzHnMlfSMRKe5lq/GFyhhdGR4ymcD/b3zNwBNzdPVcYF4
      avaNjnldR9P4UfshPr55K5Hk7A8pehpAU1HDXYXzMjHSv/pj5Lqd6Fe8e97Do9lewZo7v0rO
      UoN05huMBfch+Oyo3dPfTvMlOLAft33VNPmOS5S6rUQ3f4mM3sOhc0NsXXk548zhW8H42Il5
      3SeTHEOSTcj6uXMiliK+qm1Ya1vp3P3tyRF3vPcI9rJWBGHuAITCCDC9b6iaRjSe5nRPkKf2
      X+B/P3qQv/63VzhyYYS6srnrl/kCfsZGRy9fS1UZj8wzGE7N54glU9hsVjKZDCa9hKqq1+1S
      +8jGNhwmE6dHB6dtmFyJtOr9ZA7/AP3mT5F55k+RV7wHqX5nYXNnAZ1X06Bft4x779pF75F/
      Yij/DPX2hzGFLQhzzB1nI9S/lzrvw4XE+hnaH3BbON8X5uUjPWxaVoZeFief0+5tZeDco5TW
      33ft+wwexFmybnIT6c1G7ZpPcOTZzzN24Cm8m+9juOMZ/Cvfds3n8TrMvHKsl77RcXpHxuke
      Hqd/bIKJRBqLUUepx0p1iZNdG+rwOc2YjYVwjrn6kk6nJ5NOTx4Tj8cxmUzzMwBBEJDIcbqr
      n2WthSIDN/KDeCyX3FUCiqYizSJjKJetJf/6d0g//jkMW34HsWLTdd0vkc2ikyRsVh+tt/8Z
      kaGDnHz9WwSCm6jc8VEE/fwXxkouSSYygrm6ctZjStxWXmjv5njXKH/8wa1T/mZxVM8rqA8g
      NLCP2lWPzLttSw1RlFmx/UscfuIzmA76icZO01T6hWueF3BbCE+keOzVc1QFHKyq93NvWwM2
      s/66PVqiKKLXF4zAYDQy0NdLeVXVPA1AkrHaPWxuu0LZ4GJY9I1gNxqJZzK4zDP7b0HEsOX3
      CtvfM0hszJfeaJhql2eyvZ7yTTj8K+g6+j0OP/+HNN/2B/OumhgJncaur0a0mWd9fofVyMmu
      Ud7e1oj1qhRN0WBBECWUXAydYfZ5q6rkSMeHsDiqF7cg+RuM0eyhZdsXOPrsF3FWrUG8RmlW
      AKNe5K8/vnPR2+Lx+QiHQpRXVjLQ10tNXcOtLZLnMpmJpJJzHiOVrrqhzg/QHQlRe1X4s6wz
      07D+d2is/yhnnvkbLrT/E8ocIRiXCPa9ite5HsE6cw1jKGzmVJU42bWxboa/CliddcQjXXPe
      Jx7pwOyoRrxWWdI3Ac7AKmo3fYyKZe+6KTvR8+WSJ0jTNAb7BygrL7+1BuAxWwjNsRBeDHKK
      wkQ6NeMoIwgC9sb1rG7+U3SKkUNPf5rwUPvs+w+awnjwNHZbIxhnlwwTBIG/eGQbLtvM+dPO
      wCqi19gQCw7sxVuxec5j3kyUNz2A07/qlrbhkidIVVWymTRmi+XWGoDbYiWcuLkGMBqP4bPY
      ZpVWESQRXVMV5fo7WHn7l+g7/WNOv/Z3ZK+oM3yJVGwIvc6OJJnmDF4DZo3UBLB7WpgInp7j
      bI3IcDuukumZT0WuH38gwOjICJFQCNfFGcEtNQCH0cR4OnVT79EYmBK1AAAIeElEQVQZGqPO
      c43AMbMB0e9EHxRZtfMruMs2cvjZzzHc9dyUwtDBgX14fOvBoJtWA3chGK0BMqkgqjpzznM2
      PY6mqeiNc7v2iiwMk8lEOpWir6eHyupCkN0tNQCdJJFTlZvm4ltI9KdQ4kTL5tHCCUpq72Lt
      275OeOggR1/4U1KxwsZVaGA/bsfqOef/80EUZfRGN5nk2Ix/j44cw+lffUvny/8dEUQRSZbo
      6rhARdUSMAABMMo6UrncTbl+PJtBlqRZq6NMaculqNG+MbRMDr3RQcuWL1C1/L0cf+Uv6Tr2
      fXKZCYw4EWaST1kgdu/s06Bg/2tvqvCHNwuCIODxejl/9gz+kkKg3a01AEG4qdOg3kiYapd7
      /u3RyYg1/kKohKYhCALu0nWsv+fvUZUs/urtaKncrOpzC8HpX0l09Pi0zzVVIR7pwOaenrNc
      5Mbx+QO43O7JJJtb7mB2my2Eb5InqCscpMY9/+wvAMFhQTAbUAfDk59JspH6tb9J9fIPQC4P
      +hvXErC66olHOqZN/5ITfRgsfiT5xkeZItMpLa+gvvGymMAtN4Cb5QrNX3R/umfdZJsZQRAQ
      q31ooQm0+FUjUy4POnlR5uY6gwNVyaLkp94jNHgAT/n0MOsii0N1bS0733a5/sQtNwC35eaM
      AKPxGN453J9zIYgiUkMZSsfwFG0gLZlZlOkPXJJKqZgWFhEaPICnbOOi3KPIdARBQLxC0O2W
      G4BJp5tTSuN66QwFqV9A8vvVCGYDYsCJ2nU5alSLp27YA3QlDv8qxq9YB+RzSfLZGEZLYNHu
      UWRu5h8OrWQ5feIYg6PRax+8ACRBBA2UOSL5FoqmaQxMRCh33JgfXQg40fIqaihWuG4isyge
      oEs4fa0X9Y0KjI+dwu5ZNi3Jp8jNY97iuCPhGCazCQEVRVFuSBz3aqx6A5FkAqfxxqXXoRD9
      KQoCsiAsXGD3amp8KKf7UU16tHQWRRZnFJi9HvTmUpITA+TzOUBgrHcP7vLNN97mIvNm/uK4
      Xomu7gmcTvukKO5ilVNyWyxMZDJ4rbZFuV5/cJQal3eansx1IcuotSWoF4YQRBFZv4jBabKM
      rDej5GLojS5i4TM0rPvE4rS7yLyY91grynrqGxowLYIL8GoKrtD554Bei+5wkNobmP9fjeAw
      F/43LX7NTJu7iVj4HOnECLLOgqRbmNeqyI2xJF41HrOF3mj42gfOg7yiMH4d7s+5KLhG/XAN
      xeXr4dKGWCYZxF22oRj+8AazJFZbDpOZ8dTi7AaPJWJ4LdZFL/MqCMI1I0CvB5unmVjoLKGB
      fXjK//uEP79ZWBIjgE4SJ4PibvQN2BEKXjP6cylhMHvJpgpCWmb77GmWRW4OS2IEEBAwSDLp
      /I0FxWmaxsB4hIobdH++kQiCiNFais3diCguiffRW4ol8Y0LgoDTZCKaSs0olDVfEtkskiDO
      K/pzKRGouXPO/OAiN48lYQBwOSiu1H79HaE3Elo07c83kpLau291E96yLIkpEIDbbL3hmKCu
      cIiaBZRWLVJkyRiA5wbDovOqQjSdxGN586moFbl1LBkDMOl0JG8gKG4sHr8p7s8i/71ZMgYg
      iSLaDQTFzSf5vUiRq1mQAYRH+knenPTdgkaPwchEZuHS5Zqm0f8mc38WWRrMUxw3Q3g8Rni4
      D7ulHIOozilEer04jEbCiTj2BWh1QqH8poiAXhRRlGuXVipS5BLz0wYVZYyySEaBdDKBZC0s
      NBdbs9JjsRJJJRc8lemLRqZofxYpMl/maQASVoebleu2TP18kRecHouV/sG+BV+3KxxiU1VN
      MZCsyIJZUq/MS7vBC6Ho/ixyIywpA9CJEvkFKsUF43G85qL7s8j1saQMQBAE9AsMiusMLazy
      e5EiV7LkDMBhMs07N2DS/emcv/pbkSJXsqQMABamFJfMZRGEwi5ykSLXw5IzgIUoxfVGwlS9
      CaM/iywdlpwBLGQE6AoHqV2g9meRIley5AzArNPPSykur6pEUkm8RfdnkRtgyRmAJIqo8wiK
      CyZieMyWovuzyA2x5AxAEARsBgOxawTFdb7Jkt+LLE2WnAHAtcunappGfzRCpbMY/Vnkxpi/
      OK6ao/3114mnFl/J+WquVT0ylctddH8uvlJbkbcW8xfHDYXRG/SEoxOY9K5FFce9GqfBSF8k
      NKtIbFdojAqHqygiW+SGmbc4bmmghGw6Q8DnRrqokLZY4rhX47ZYmcikZxWJ7YmG2VBRXRSR
      LXLDzLsHCaJETW3dzWzLJDpJIqfMrBSnqCqRZHLRlKSLvLVZkotgcY6guGAijttSdH8WWRyW
      pAHMVT61MzRGvbvo/iyyOCxJA4BLIRFTXaGaptEXjVDpKro/iywOS9cALJZprtBLFeWL7s8i
      i8WSNYBCVOjUqjG90TBVC6j8XqTItViyBmDS6Sff+JfoChWjP4ssLkvWAGRRRNW0yaA4RVUJ
      JxP4iu7PIovIkjWAq4Pigok47mL0Z5FFZskaAIDTZJ6USSkmvxe5GSxpA7i0EC64P8NUFpPf
      iywy8zcATSM4OkQ698Zpb15yhV7aES4mvxdZbOZtAGpmnLOdQ2ia9oYJ0DqNZqLp1MXkd3dR
      +rDIojP/cOhgFJNeYngkSE1FgHw+f9PCoS8hAtl8jo7gKGvKK4vhz0UWnXmHQ5eVVxMoURAl
      qVA5XRRvWjj0JTRNQyfJjMRjlNidRQ9QkUVn/gH1goD0BsffX1KKsxoMxc5f5Kaw5DNKKhwu
      jHJx8Vvk5iBo1zmRVxTlpk+BgMl1RnEBXORmsORHgGLHL3IzWdIbYUWK3GyKBlDkLU3RAIq8
      pSkaQJG3NEUDKPKWpmgARd7SXLcBXFmUWtO0BVWOv1nH3sxrv1WecSHbQgttx8289vUe+/8D
      9kJ4aTVtEawAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
